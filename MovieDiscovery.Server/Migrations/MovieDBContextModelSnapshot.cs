// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieDiscovery.Server.Context;

#nullable disable

namespace MovieDiscovery.Server.Migrations
{
    [DbContext(typeof(MovieDBContext))]
    partial class MovieDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("MovieDiscovery.Server.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Фентезі"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Музичні"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Мелодрами"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Сімейний"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Дитячий"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Екшн"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Комедія"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Пригоди"
                        });
                });

            modelBuilder.Entity("MovieDiscovery.Server.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<float?>("Rating")
                        .HasColumnType("REAL");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Фільм розповідає нерозказану історію Ельфаби, майбутньої Злої Відьми Заходу, та її складних стосунків з Гліндою, Доброю Відьмою Півночі. Оповідь розгортається переважно до прибуття Дороті в країну Оз, досліджуючи, як Ельфаба, народжена із зеленою шкірою і лютим духом, стає незрозумілою і врешті-решт отримує ярлик «злої».\r\n\r\nФільм заглиблюється в подорож Ельфаби від її дитинства до навчання в університеті Шиз, де вона знайомиться з Гліндою, популярною та привілейованою дівчиною. Їхню дружбу випробовують контрастні характери та ідеології, суперництво за чарівного принца Фієро та їхня реакція на деспотичний режим Чарівника країни Оз. У міру того, як Ельфаба дедалі більше усвідомлює корумпованість влади Чарівника і бореться проти несправедливості, темні таємниці та особисті трагедії формують її шлях до того, щоб стати культовою фігурою, відомою як Зла Відьма.",
                            Rating = 7.6f,
                            Title = "Чародійка",
                            Year = 2024
                        },
                        new
                        {
                            Id = 2,
                            Description = "У Барбіленді, матріархальному суспільстві з різними Барбі, Кенами та вигнанцями, Кен прагне тіснішого зв'язку з Барбі, яка зосереджена на своїй кар'єрі. Коли Барбі стикається з екзистенційною кризою, вона розуміє, що для зцілення їй необхідно знайти свого реального власника. Кен приєднується до неї, і їхня подорож приводить їх до Саші, дівчини, яка критично ставиться до стандартів краси Барбі.\r\n\r\nПовернувшись до Барбіленду, Кен захоплює владу, запроваджуючи патріархальну систему. Подруга Барбі Глорія допомагає їй і Саші вирватися з-під влади \"Маттел\". Разом вони згуртовують Барбі, щоб звільнитися від підпорядкування і відновити баланс.",
                            Rating = 6.8f,
                            Title = "Барбі",
                            Year = 2023
                        },
                        new
                        {
                            Id = 3,
                            Description = "Улюблені героїні \"Школи монстрів\" опиняються у вирі надприродних подій. Коли Френкі Стайн знаходить таємничий ліхтар джина, вона та її друзі мимоволі вивільняють силу бажань у своєму світі. Коли їхні бажання здійснюються, вони незабаром усвідомлюють, що їхні мрії мають непередбачувані наслідки і загрожують порушити рівновагу в їхній школі, наповненій монстрами.\r\n\r\nЗгодом учні мають пройти через низку випробувань, подолати власні страхи та невпевненість і, зрештою, зрозуміти важливість безкорисливості та вибору на користь більшого блага. Працюючи разом, вони відкривають для себе справжнє значення дружби і знаходять сили, щоб виправити хаос, який вони спричинили.",
                            Rating = 6.9f,
                            Title = "Школа монстрів: 13 бажань",
                            Year = 2013
                        },
                        new
                        {
                            Id = 4,
                            Description = "Монстри з Монстр Хай вирушають у захопливу подорож до міста Бу-Йорк, де вони відвідують історичне свято Кришталевої комети. Дорогою вони дізнаються про змову з метою викрасти магічну силу комети та спричинити хаос у місті. За допомогою нових друзів та своїх унікальних здібностей монстри мають розгадати таємницю, врятувати комету та показати світові, що бути інакшим - це не лише нормально, але й те, що варто святкувати. Цей анімаційний фільм, наповнений яскравими музичними номерами та моторошними пригодами, оспівує дружбу, самоприйняття та силу єдності.",
                            Rating = 6.7f,
                            Title = "Школа монстрів: Бу Йорк, Бу Йорк",
                            Year = 2015
                        },
                        new
                        {
                            Id = 5,
                            Description = "\"Монстр Хай: Привиди\" - анімаційний фільм, що розповідає про пригоди групи учениць \"Монстр Хай\", які розслідують справу про привидів у місцевому історичному театрі. По дорозі вони натрапляють на таємничого привида, який, схоже, пов'язаний з минулим \"Монстр Хай\".\r\nСюжет наповнений інтригою, гумором і музичними номерами, які неодмінно сподобаються як дітям, так і дорослим.\r\nШанувальники франшизи \"Монстр Хай\" будуть у захваті, побачивши, як їхні улюблені персонажі, такі як Дракулаура та Вовк Клаудін, приймають нові виклики та зростають як особистості.\r\nЗагалом, \"Монстр Хай: Привиди\" - це веселий фільм, який оспівує дружбу, хоробрість і прийняття відмінностей, а також надає моторошних відчуттів і хвилювань.",
                            Rating = 6.3f,
                            Title = "Школа монстрів: Привиди",
                            Year = 2015
                        });
                });

            modelBuilder.Entity("MovieDiscovery.Server.Models.Movie_Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenreId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("Movies_Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 2,
                            GenreId = 2,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 3,
                            GenreId = 3,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 4,
                            GenreId = 3,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 5,
                            GenreId = 6,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 6,
                            GenreId = 7,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 7,
                            GenreId = 8,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 8,
                            GenreId = 1,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 9,
                            GenreId = 5,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 10,
                            GenreId = 7,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 11,
                            GenreId = 2,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 12,
                            GenreId = 5,
                            MovieId = 4
                        });
                });

            modelBuilder.Entity("MovieDiscovery.Server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username", "Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MovieDiscovery.Server.Models.Movie_Genre", b =>
                {
                    b.HasOne("MovieDiscovery.Server.Models.Genre", "Genre")
                        .WithMany("MoviesGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieDiscovery.Server.Models.Movie", "Movie")
                        .WithMany("MoviesGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieDiscovery.Server.Models.User", "User")
                        .WithMany("MoviesGenres")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Genre");

                    b.Navigation("Movie");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MovieDiscovery.Server.Models.Genre", b =>
                {
                    b.Navigation("MoviesGenres");
                });

            modelBuilder.Entity("MovieDiscovery.Server.Models.Movie", b =>
                {
                    b.Navigation("MoviesGenres");
                });

            modelBuilder.Entity("MovieDiscovery.Server.Models.User", b =>
                {
                    b.Navigation("MoviesGenres");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieDiscovery.Server.Context;

#nullable disable

namespace MovieDiscovery.Server.Migrations
{
    [DbContext(typeof(MovieDBContext))]
    [Migration("20250221094539_SeedDatabase")]
    partial class SeedDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("api.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Фентезі"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Музичні"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Мелодрами"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Сімейний"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Дитячий"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Екшн"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Комедія"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Пригоди"
                        });
                });

            modelBuilder.Entity("api.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<float?>("Rating")
                        .HasColumnType("REAL");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Ми переносимося в Країну Оз і знайомимося з відьмою на ім'я Ельфаба. Вона наділена не тільки надприродними здібностями, але й зеленим кольором шкіри. Через це з неї сміялися протягом усього дитинства, а тепер всі бояться Ельфаби. Відьма впевнена, що у світі немає жодної людини, якій варто було б довіряти. Життя головної героїні змінюється, коли вона опиняється в школі чаклунства. Тут Ельфаба знайомиться з Гліндою - чарівницею з добрим серцем, яка користується загальною любов'ю. Вона пропонує новенькій свою дружбу, що стає для всіх повною несподіванкою. В той самий час подруги дізнаються, що над їхнім світом нависла небезпека, яка походить від підступного чаклуна. Незважаючи на різні погляди, Ельфаба і Глінда об'єднують зусилля і вступають у боротьбу з темними силами.",
                            Rating = 7.6f,
                            Title = "Чародійка",
                            Year = 2024
                        },
                        new
                        {
                            Id = 2,
                            Description = "Барбіленд – напрочуд прекрасний світ. Його мешканці – ідеальні та вічно молоді. Вони мають спортивні фігури, красиві обличчя. Постійно виглядаючи як супермоделі, хлопці та дівчата одягаються у модний одяг. Гучні вечірки супроводжуються виключно сучасною музикою, а їхні учасники здатні танцювати всю ніч. Але варто придивитися, видно, що рухи надто механічні, а прагнення до ідеалу надто наполегливе. Барбі з Кеном усіляко намагалися відповідати стандартам. Але їхні спроби були марними, що призвело до кризи. У новому світі вона зрозуміла, що зовсім необов'язково прагнути недосяжних ідеалів, що можна просто залишатися собою. З якими викликами доведеться зіткнутися білявій красуні і чи зможе вона знайти нових друзів?",
                            Rating = 6.8f,
                            Title = "Барбі",
                            Year = 2023
                        },
                        new
                        {
                            Id = 3,
                            Description = "Мультфільм «Школа монстрів: 13 бажань» продовжує розповідати про дивовижні пригоди учнів найнезвичайнішої школи у світі. З початком нового навчального року юні монстри чекають на великі зміни у власних життях, адже новий рік обіцяє нові можливості. Деякі бажання учнів дуже прості, а деякі є практично нездійсненними. Так, юна Хоулін мріє стати найпопулярнішим дівчиськом у школі, але слава та популярність належить її старшій сестрі Клодін Вульф та її подругам. Однак після того, як в руки Хоулін потрапляє чарівна лампа з джином усередині, її мрія починає збуватися. Чарівний джин Джіджі дарує дівчинці можливість здійснити не одне, а цілих тринадцять бажань. Щоправда, невдовзі Хоулін розуміє, що свої бажання потрібно обирати дуже ретельно.",
                            Rating = 6.9f,
                            Title = "Школа монстрів: 13 бажань",
                            Year = 2013
                        },
                        new
                        {
                            Id = 4,
                            Description = "Пригоди студентів незвичайного навчального закладу для монстрів продовжуються. Талановита співачка на ім'я Кетті Нуар залишила світ шоу-бізнесу в розпал своєї популярності. Дівчину залишило натхнення, тож вона не може писати нові пісні. Взявши паузу у творчій кар'єрі, вона вирішила присвятити більше часу навчанню. Одного дня разом зі своїми близькими приятельками, Нуар вирушає у величезне місто Бу-Йорк. Цей населений пункт є справжнім центром музики, моди та театрів. Саме тут збираються талановиті особи. Кетті сподівається зарядитись позитивною енергією від перебування в мегаполісі. Незабаром головних героїнь мультфільму «Школа Монстрів: Бу-Йорк, Бу-Йорк» чекають неймовірні зустрічі та пригоди.",
                            Rating = 6.7f,
                            Title = "Школа монстрів: Бу Йорк, Бу Йорк",
                            Year = 2015
                        },
                        new
                        {
                            Id = 5,
                            Description = "Незвичайний анімаційний мультфільм Школа монстрів: Привиди показує життя учениць, які навчаються у школі для нечисті. На них чекають неймовірні пригоди в таємничому місці для привидів. Маленькі дівчатка-монстри разом із куратором відвідують світ Духів, хоч за правилами це заборонено. Директор - жінка, що дотримуються вкрай строгих правил. Головній героїні мультика Спектрі буде важко повернутись, оскільки керівниця навчального закладу не випустить її. Доводиться подругам дівчини бігти на допомогу. Що з цього вийде і чи пощастить повернути полонянку глядачі дізнаються, подивившись мультфільм.",
                            Rating = 6.3f,
                            Title = "Школа монстрів: Привиди",
                            Year = 2015
                        });
                });

            modelBuilder.Entity("api.Models.Movie_Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenreId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("Movies_Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 2,
                            GenreId = 2,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 3,
                            GenreId = 3,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 4,
                            GenreId = 3,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 5,
                            GenreId = 6,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 6,
                            GenreId = 7,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 7,
                            GenreId = 8,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 8,
                            GenreId = 1,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 9,
                            GenreId = 5,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 10,
                            GenreId = 7,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 11,
                            GenreId = 2,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 12,
                            GenreId = 5,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 13,
                            GenreId = 8,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 14,
                            GenreId = 1,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 15,
                            GenreId = 4,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 16,
                            GenreId = 5,
                            MovieId = 5
                        });
                });

            modelBuilder.Entity("api.Models.Movie_Genre", b =>
                {
                    b.HasOne("api.Models.Genre", "Genre")
                        .WithMany("MoviesGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Movie", "Movie")
                        .WithMany("MoviesGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("api.Models.Genre", b =>
                {
                    b.Navigation("MoviesGenres");
                });

            modelBuilder.Entity("api.Models.Movie", b =>
                {
                    b.Navigation("MoviesGenres");
                });
#pragma warning restore 612, 618
        }
    }
}

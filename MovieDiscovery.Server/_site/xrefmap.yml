### YamlMime:XRefMap
sorted: true
references:
- uid: MovieDiscovery.Server.Context
  name: MovieDiscovery.Server.Context
  href: api/MovieDiscovery.Server.Context.html
  commentId: N:MovieDiscovery.Server.Context
  fullName: MovieDiscovery.Server.Context
  nameWithType: MovieDiscovery.Server.Context
- uid: MovieDiscovery.Server.Context.MovieDBContext
  name: MovieDBContext
  href: api/MovieDiscovery.Server.Context.MovieDBContext.html
  commentId: T:MovieDiscovery.Server.Context.MovieDBContext
  fullName: MovieDiscovery.Server.Context.MovieDBContext
  nameWithType: MovieDBContext
- uid: MovieDiscovery.Server.Context.MovieDBContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{MovieDiscovery.Server.Context.MovieDBContext})
  name: MovieDBContext(DbContextOptions<MovieDBContext>)
  href: api/MovieDiscovery.Server.Context.MovieDBContext.html#MovieDiscovery_Server_Context_MovieDBContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_MovieDiscovery_Server_Context_MovieDBContext__
  commentId: M:MovieDiscovery.Server.Context.MovieDBContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{MovieDiscovery.Server.Context.MovieDBContext})
  name.vb: New(DbContextOptions(Of MovieDBContext))
  fullName: MovieDiscovery.Server.Context.MovieDBContext.MovieDBContext(Microsoft.EntityFrameworkCore.DbContextOptions<MovieDiscovery.Server.Context.MovieDBContext>)
  fullName.vb: MovieDiscovery.Server.Context.MovieDBContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of MovieDiscovery.Server.Context.MovieDBContext))
  nameWithType: MovieDBContext.MovieDBContext(DbContextOptions<MovieDBContext>)
  nameWithType.vb: MovieDBContext.New(DbContextOptions(Of MovieDBContext))
- uid: MovieDiscovery.Server.Context.MovieDBContext.#ctor*
  name: MovieDBContext
  href: api/MovieDiscovery.Server.Context.MovieDBContext.html#MovieDiscovery_Server_Context_MovieDBContext__ctor_
  commentId: Overload:MovieDiscovery.Server.Context.MovieDBContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MovieDiscovery.Server.Context.MovieDBContext.MovieDBContext
  fullName.vb: MovieDiscovery.Server.Context.MovieDBContext.New
  nameWithType: MovieDBContext.MovieDBContext
  nameWithType.vb: MovieDBContext.New
- uid: MovieDiscovery.Server.Context.MovieDBContext.Genres
  name: Genres
  href: api/MovieDiscovery.Server.Context.MovieDBContext.html#MovieDiscovery_Server_Context_MovieDBContext_Genres
  commentId: P:MovieDiscovery.Server.Context.MovieDBContext.Genres
  fullName: MovieDiscovery.Server.Context.MovieDBContext.Genres
  nameWithType: MovieDBContext.Genres
- uid: MovieDiscovery.Server.Context.MovieDBContext.Genres*
  name: Genres
  href: api/MovieDiscovery.Server.Context.MovieDBContext.html#MovieDiscovery_Server_Context_MovieDBContext_Genres_
  commentId: Overload:MovieDiscovery.Server.Context.MovieDBContext.Genres
  isSpec: "True"
  fullName: MovieDiscovery.Server.Context.MovieDBContext.Genres
  nameWithType: MovieDBContext.Genres
- uid: MovieDiscovery.Server.Context.MovieDBContext.Movies
  name: Movies
  href: api/MovieDiscovery.Server.Context.MovieDBContext.html#MovieDiscovery_Server_Context_MovieDBContext_Movies
  commentId: P:MovieDiscovery.Server.Context.MovieDBContext.Movies
  fullName: MovieDiscovery.Server.Context.MovieDBContext.Movies
  nameWithType: MovieDBContext.Movies
- uid: MovieDiscovery.Server.Context.MovieDBContext.Movies*
  name: Movies
  href: api/MovieDiscovery.Server.Context.MovieDBContext.html#MovieDiscovery_Server_Context_MovieDBContext_Movies_
  commentId: Overload:MovieDiscovery.Server.Context.MovieDBContext.Movies
  isSpec: "True"
  fullName: MovieDiscovery.Server.Context.MovieDBContext.Movies
  nameWithType: MovieDBContext.Movies
- uid: MovieDiscovery.Server.Context.MovieDBContext.Movies_Genres
  name: Movies_Genres
  href: api/MovieDiscovery.Server.Context.MovieDBContext.html#MovieDiscovery_Server_Context_MovieDBContext_Movies_Genres
  commentId: P:MovieDiscovery.Server.Context.MovieDBContext.Movies_Genres
  fullName: MovieDiscovery.Server.Context.MovieDBContext.Movies_Genres
  nameWithType: MovieDBContext.Movies_Genres
- uid: MovieDiscovery.Server.Context.MovieDBContext.Movies_Genres*
  name: Movies_Genres
  href: api/MovieDiscovery.Server.Context.MovieDBContext.html#MovieDiscovery_Server_Context_MovieDBContext_Movies_Genres_
  commentId: Overload:MovieDiscovery.Server.Context.MovieDBContext.Movies_Genres
  isSpec: "True"
  fullName: MovieDiscovery.Server.Context.MovieDBContext.Movies_Genres
  nameWithType: MovieDBContext.Movies_Genres
- uid: MovieDiscovery.Server.Context.MovieDBContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/MovieDiscovery.Server.Context.MovieDBContext.html#MovieDiscovery_Server_Context_MovieDBContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MovieDiscovery.Server.Context.MovieDBContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MovieDiscovery.Server.Context.MovieDBContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: MovieDBContext.OnModelCreating(ModelBuilder)
- uid: MovieDiscovery.Server.Context.MovieDBContext.OnModelCreating*
  name: OnModelCreating
  href: api/MovieDiscovery.Server.Context.MovieDBContext.html#MovieDiscovery_Server_Context_MovieDBContext_OnModelCreating_
  commentId: Overload:MovieDiscovery.Server.Context.MovieDBContext.OnModelCreating
  isSpec: "True"
  fullName: MovieDiscovery.Server.Context.MovieDBContext.OnModelCreating
  nameWithType: MovieDBContext.OnModelCreating
- uid: MovieDiscovery.Server.Context.MovieDBContext.Users
  name: Users
  href: api/MovieDiscovery.Server.Context.MovieDBContext.html#MovieDiscovery_Server_Context_MovieDBContext_Users
  commentId: P:MovieDiscovery.Server.Context.MovieDBContext.Users
  fullName: MovieDiscovery.Server.Context.MovieDBContext.Users
  nameWithType: MovieDBContext.Users
- uid: MovieDiscovery.Server.Context.MovieDBContext.Users*
  name: Users
  href: api/MovieDiscovery.Server.Context.MovieDBContext.html#MovieDiscovery_Server_Context_MovieDBContext_Users_
  commentId: Overload:MovieDiscovery.Server.Context.MovieDBContext.Users
  isSpec: "True"
  fullName: MovieDiscovery.Server.Context.MovieDBContext.Users
  nameWithType: MovieDBContext.Users
- uid: MovieDiscovery.Server.Contracts.Genre
  name: MovieDiscovery.Server.Contracts.Genre
  href: api/MovieDiscovery.Server.Contracts.Genre.html
  commentId: N:MovieDiscovery.Server.Contracts.Genre
  fullName: MovieDiscovery.Server.Contracts.Genre
  nameWithType: MovieDiscovery.Server.Contracts.Genre
- uid: MovieDiscovery.Server.Contracts.Genre.GenreResponse
  name: GenreResponse
  href: api/MovieDiscovery.Server.Contracts.Genre.GenreResponse.html
  commentId: T:MovieDiscovery.Server.Contracts.Genre.GenreResponse
  fullName: MovieDiscovery.Server.Contracts.Genre.GenreResponse
  nameWithType: GenreResponse
- uid: MovieDiscovery.Server.Contracts.Genre.GenreResponse.Id
  name: Id
  href: api/MovieDiscovery.Server.Contracts.Genre.GenreResponse.html#MovieDiscovery_Server_Contracts_Genre_GenreResponse_Id
  commentId: P:MovieDiscovery.Server.Contracts.Genre.GenreResponse.Id
  fullName: MovieDiscovery.Server.Contracts.Genre.GenreResponse.Id
  nameWithType: GenreResponse.Id
- uid: MovieDiscovery.Server.Contracts.Genre.GenreResponse.Id*
  name: Id
  href: api/MovieDiscovery.Server.Contracts.Genre.GenreResponse.html#MovieDiscovery_Server_Contracts_Genre_GenreResponse_Id_
  commentId: Overload:MovieDiscovery.Server.Contracts.Genre.GenreResponse.Id
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.Genre.GenreResponse.Id
  nameWithType: GenreResponse.Id
- uid: MovieDiscovery.Server.Contracts.Genre.GenreResponse.Name
  name: Name
  href: api/MovieDiscovery.Server.Contracts.Genre.GenreResponse.html#MovieDiscovery_Server_Contracts_Genre_GenreResponse_Name
  commentId: P:MovieDiscovery.Server.Contracts.Genre.GenreResponse.Name
  fullName: MovieDiscovery.Server.Contracts.Genre.GenreResponse.Name
  nameWithType: GenreResponse.Name
- uid: MovieDiscovery.Server.Contracts.Genre.GenreResponse.Name*
  name: Name
  href: api/MovieDiscovery.Server.Contracts.Genre.GenreResponse.html#MovieDiscovery_Server_Contracts_Genre_GenreResponse_Name_
  commentId: Overload:MovieDiscovery.Server.Contracts.Genre.GenreResponse.Name
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.Genre.GenreResponse.Name
  nameWithType: GenreResponse.Name
- uid: MovieDiscovery.Server.Contracts.Movie
  name: MovieDiscovery.Server.Contracts.Movie
  href: api/MovieDiscovery.Server.Contracts.Movie.html
  commentId: N:MovieDiscovery.Server.Contracts.Movie
  fullName: MovieDiscovery.Server.Contracts.Movie
  nameWithType: MovieDiscovery.Server.Contracts.Movie
- uid: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest
  name: CreateMovieRequest
  href: api/MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.html
  commentId: T:MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest
  fullName: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest
  nameWithType: CreateMovieRequest
- uid: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Description
  name: Description
  href: api/MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.html#MovieDiscovery_Server_Contracts_Movie_CreateMovieRequest_Description
  commentId: P:MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Description
  fullName: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Description
  nameWithType: CreateMovieRequest.Description
- uid: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Description*
  name: Description
  href: api/MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.html#MovieDiscovery_Server_Contracts_Movie_CreateMovieRequest_Description_
  commentId: Overload:MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Description
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Description
  nameWithType: CreateMovieRequest.Description
- uid: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.GenresID
  name: GenresID
  href: api/MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.html#MovieDiscovery_Server_Contracts_Movie_CreateMovieRequest_GenresID
  commentId: P:MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.GenresID
  fullName: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.GenresID
  nameWithType: CreateMovieRequest.GenresID
- uid: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.GenresID*
  name: GenresID
  href: api/MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.html#MovieDiscovery_Server_Contracts_Movie_CreateMovieRequest_GenresID_
  commentId: Overload:MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.GenresID
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.GenresID
  nameWithType: CreateMovieRequest.GenresID
- uid: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Rating
  name: Rating
  href: api/MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.html#MovieDiscovery_Server_Contracts_Movie_CreateMovieRequest_Rating
  commentId: P:MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Rating
  fullName: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Rating
  nameWithType: CreateMovieRequest.Rating
- uid: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Rating*
  name: Rating
  href: api/MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.html#MovieDiscovery_Server_Contracts_Movie_CreateMovieRequest_Rating_
  commentId: Overload:MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Rating
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Rating
  nameWithType: CreateMovieRequest.Rating
- uid: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Title
  name: Title
  href: api/MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.html#MovieDiscovery_Server_Contracts_Movie_CreateMovieRequest_Title
  commentId: P:MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Title
  fullName: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Title
  nameWithType: CreateMovieRequest.Title
- uid: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Title*
  name: Title
  href: api/MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.html#MovieDiscovery_Server_Contracts_Movie_CreateMovieRequest_Title_
  commentId: Overload:MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Title
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Title
  nameWithType: CreateMovieRequest.Title
- uid: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Year
  name: Year
  href: api/MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.html#MovieDiscovery_Server_Contracts_Movie_CreateMovieRequest_Year
  commentId: P:MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Year
  fullName: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Year
  nameWithType: CreateMovieRequest.Year
- uid: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Year*
  name: Year
  href: api/MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.html#MovieDiscovery_Server_Contracts_Movie_CreateMovieRequest_Year_
  commentId: Overload:MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Year
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest.Year
  nameWithType: CreateMovieRequest.Year
- uid: MovieDiscovery.Server.Contracts.Movie.MovieResponse
  name: MovieResponse
  href: api/MovieDiscovery.Server.Contracts.Movie.MovieResponse.html
  commentId: T:MovieDiscovery.Server.Contracts.Movie.MovieResponse
  fullName: MovieDiscovery.Server.Contracts.Movie.MovieResponse
  nameWithType: MovieResponse
- uid: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Description
  name: Description
  href: api/MovieDiscovery.Server.Contracts.Movie.MovieResponse.html#MovieDiscovery_Server_Contracts_Movie_MovieResponse_Description
  commentId: P:MovieDiscovery.Server.Contracts.Movie.MovieResponse.Description
  fullName: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Description
  nameWithType: MovieResponse.Description
- uid: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Description*
  name: Description
  href: api/MovieDiscovery.Server.Contracts.Movie.MovieResponse.html#MovieDiscovery_Server_Contracts_Movie_MovieResponse_Description_
  commentId: Overload:MovieDiscovery.Server.Contracts.Movie.MovieResponse.Description
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Description
  nameWithType: MovieResponse.Description
- uid: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Genres
  name: Genres
  href: api/MovieDiscovery.Server.Contracts.Movie.MovieResponse.html#MovieDiscovery_Server_Contracts_Movie_MovieResponse_Genres
  commentId: P:MovieDiscovery.Server.Contracts.Movie.MovieResponse.Genres
  fullName: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Genres
  nameWithType: MovieResponse.Genres
- uid: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Genres*
  name: Genres
  href: api/MovieDiscovery.Server.Contracts.Movie.MovieResponse.html#MovieDiscovery_Server_Contracts_Movie_MovieResponse_Genres_
  commentId: Overload:MovieDiscovery.Server.Contracts.Movie.MovieResponse.Genres
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Genres
  nameWithType: MovieResponse.Genres
- uid: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Id
  name: Id
  href: api/MovieDiscovery.Server.Contracts.Movie.MovieResponse.html#MovieDiscovery_Server_Contracts_Movie_MovieResponse_Id
  commentId: P:MovieDiscovery.Server.Contracts.Movie.MovieResponse.Id
  fullName: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Id
  nameWithType: MovieResponse.Id
- uid: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Id*
  name: Id
  href: api/MovieDiscovery.Server.Contracts.Movie.MovieResponse.html#MovieDiscovery_Server_Contracts_Movie_MovieResponse_Id_
  commentId: Overload:MovieDiscovery.Server.Contracts.Movie.MovieResponse.Id
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Id
  nameWithType: MovieResponse.Id
- uid: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Rating
  name: Rating
  href: api/MovieDiscovery.Server.Contracts.Movie.MovieResponse.html#MovieDiscovery_Server_Contracts_Movie_MovieResponse_Rating
  commentId: P:MovieDiscovery.Server.Contracts.Movie.MovieResponse.Rating
  fullName: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Rating
  nameWithType: MovieResponse.Rating
- uid: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Rating*
  name: Rating
  href: api/MovieDiscovery.Server.Contracts.Movie.MovieResponse.html#MovieDiscovery_Server_Contracts_Movie_MovieResponse_Rating_
  commentId: Overload:MovieDiscovery.Server.Contracts.Movie.MovieResponse.Rating
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Rating
  nameWithType: MovieResponse.Rating
- uid: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Title
  name: Title
  href: api/MovieDiscovery.Server.Contracts.Movie.MovieResponse.html#MovieDiscovery_Server_Contracts_Movie_MovieResponse_Title
  commentId: P:MovieDiscovery.Server.Contracts.Movie.MovieResponse.Title
  fullName: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Title
  nameWithType: MovieResponse.Title
- uid: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Title*
  name: Title
  href: api/MovieDiscovery.Server.Contracts.Movie.MovieResponse.html#MovieDiscovery_Server_Contracts_Movie_MovieResponse_Title_
  commentId: Overload:MovieDiscovery.Server.Contracts.Movie.MovieResponse.Title
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Title
  nameWithType: MovieResponse.Title
- uid: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Year
  name: Year
  href: api/MovieDiscovery.Server.Contracts.Movie.MovieResponse.html#MovieDiscovery_Server_Contracts_Movie_MovieResponse_Year
  commentId: P:MovieDiscovery.Server.Contracts.Movie.MovieResponse.Year
  fullName: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Year
  nameWithType: MovieResponse.Year
- uid: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Year*
  name: Year
  href: api/MovieDiscovery.Server.Contracts.Movie.MovieResponse.html#MovieDiscovery_Server_Contracts_Movie_MovieResponse_Year_
  commentId: Overload:MovieDiscovery.Server.Contracts.Movie.MovieResponse.Year
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.Movie.MovieResponse.Year
  nameWithType: MovieResponse.Year
- uid: MovieDiscovery.Server.Contracts.User
  name: MovieDiscovery.Server.Contracts.User
  href: api/MovieDiscovery.Server.Contracts.User.html
  commentId: N:MovieDiscovery.Server.Contracts.User
  fullName: MovieDiscovery.Server.Contracts.User
  nameWithType: MovieDiscovery.Server.Contracts.User
- uid: MovieDiscovery.Server.Contracts.User.CreateUserRequest
  name: CreateUserRequest
  href: api/MovieDiscovery.Server.Contracts.User.CreateUserRequest.html
  commentId: T:MovieDiscovery.Server.Contracts.User.CreateUserRequest
  fullName: MovieDiscovery.Server.Contracts.User.CreateUserRequest
  nameWithType: CreateUserRequest
- uid: MovieDiscovery.Server.Contracts.User.CreateUserRequest.Email
  name: Email
  href: api/MovieDiscovery.Server.Contracts.User.CreateUserRequest.html#MovieDiscovery_Server_Contracts_User_CreateUserRequest_Email
  commentId: P:MovieDiscovery.Server.Contracts.User.CreateUserRequest.Email
  fullName: MovieDiscovery.Server.Contracts.User.CreateUserRequest.Email
  nameWithType: CreateUserRequest.Email
- uid: MovieDiscovery.Server.Contracts.User.CreateUserRequest.Email*
  name: Email
  href: api/MovieDiscovery.Server.Contracts.User.CreateUserRequest.html#MovieDiscovery_Server_Contracts_User_CreateUserRequest_Email_
  commentId: Overload:MovieDiscovery.Server.Contracts.User.CreateUserRequest.Email
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.User.CreateUserRequest.Email
  nameWithType: CreateUserRequest.Email
- uid: MovieDiscovery.Server.Contracts.User.CreateUserRequest.Password
  name: Password
  href: api/MovieDiscovery.Server.Contracts.User.CreateUserRequest.html#MovieDiscovery_Server_Contracts_User_CreateUserRequest_Password
  commentId: P:MovieDiscovery.Server.Contracts.User.CreateUserRequest.Password
  fullName: MovieDiscovery.Server.Contracts.User.CreateUserRequest.Password
  nameWithType: CreateUserRequest.Password
- uid: MovieDiscovery.Server.Contracts.User.CreateUserRequest.Password*
  name: Password
  href: api/MovieDiscovery.Server.Contracts.User.CreateUserRequest.html#MovieDiscovery_Server_Contracts_User_CreateUserRequest_Password_
  commentId: Overload:MovieDiscovery.Server.Contracts.User.CreateUserRequest.Password
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.User.CreateUserRequest.Password
  nameWithType: CreateUserRequest.Password
- uid: MovieDiscovery.Server.Contracts.User.CreateUserRequest.Username
  name: Username
  href: api/MovieDiscovery.Server.Contracts.User.CreateUserRequest.html#MovieDiscovery_Server_Contracts_User_CreateUserRequest_Username
  commentId: P:MovieDiscovery.Server.Contracts.User.CreateUserRequest.Username
  fullName: MovieDiscovery.Server.Contracts.User.CreateUserRequest.Username
  nameWithType: CreateUserRequest.Username
- uid: MovieDiscovery.Server.Contracts.User.CreateUserRequest.Username*
  name: Username
  href: api/MovieDiscovery.Server.Contracts.User.CreateUserRequest.html#MovieDiscovery_Server_Contracts_User_CreateUserRequest_Username_
  commentId: Overload:MovieDiscovery.Server.Contracts.User.CreateUserRequest.Username
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.User.CreateUserRequest.Username
  nameWithType: CreateUserRequest.Username
- uid: MovieDiscovery.Server.Contracts.User.UpdateUserRequest
  name: UpdateUserRequest
  href: api/MovieDiscovery.Server.Contracts.User.UpdateUserRequest.html
  commentId: T:MovieDiscovery.Server.Contracts.User.UpdateUserRequest
  fullName: MovieDiscovery.Server.Contracts.User.UpdateUserRequest
  nameWithType: UpdateUserRequest
- uid: MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Email
  name: Email
  href: api/MovieDiscovery.Server.Contracts.User.UpdateUserRequest.html#MovieDiscovery_Server_Contracts_User_UpdateUserRequest_Email
  commentId: P:MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Email
  fullName: MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Email
  nameWithType: UpdateUserRequest.Email
- uid: MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Email*
  name: Email
  href: api/MovieDiscovery.Server.Contracts.User.UpdateUserRequest.html#MovieDiscovery_Server_Contracts_User_UpdateUserRequest_Email_
  commentId: Overload:MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Email
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Email
  nameWithType: UpdateUserRequest.Email
- uid: MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Password
  name: Password
  href: api/MovieDiscovery.Server.Contracts.User.UpdateUserRequest.html#MovieDiscovery_Server_Contracts_User_UpdateUserRequest_Password
  commentId: P:MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Password
  fullName: MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Password
  nameWithType: UpdateUserRequest.Password
- uid: MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Password*
  name: Password
  href: api/MovieDiscovery.Server.Contracts.User.UpdateUserRequest.html#MovieDiscovery_Server_Contracts_User_UpdateUserRequest_Password_
  commentId: Overload:MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Password
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Password
  nameWithType: UpdateUserRequest.Password
- uid: MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Username
  name: Username
  href: api/MovieDiscovery.Server.Contracts.User.UpdateUserRequest.html#MovieDiscovery_Server_Contracts_User_UpdateUserRequest_Username
  commentId: P:MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Username
  fullName: MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Username
  nameWithType: UpdateUserRequest.Username
- uid: MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Username*
  name: Username
  href: api/MovieDiscovery.Server.Contracts.User.UpdateUserRequest.html#MovieDiscovery_Server_Contracts_User_UpdateUserRequest_Username_
  commentId: Overload:MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Username
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.User.UpdateUserRequest.Username
  nameWithType: UpdateUserRequest.Username
- uid: MovieDiscovery.Server.Contracts.User.UserRequest
  name: UserRequest
  href: api/MovieDiscovery.Server.Contracts.User.UserRequest.html
  commentId: T:MovieDiscovery.Server.Contracts.User.UserRequest
  fullName: MovieDiscovery.Server.Contracts.User.UserRequest
  nameWithType: UserRequest
- uid: MovieDiscovery.Server.Contracts.User.UserRequest.Password
  name: Password
  href: api/MovieDiscovery.Server.Contracts.User.UserRequest.html#MovieDiscovery_Server_Contracts_User_UserRequest_Password
  commentId: P:MovieDiscovery.Server.Contracts.User.UserRequest.Password
  fullName: MovieDiscovery.Server.Contracts.User.UserRequest.Password
  nameWithType: UserRequest.Password
- uid: MovieDiscovery.Server.Contracts.User.UserRequest.Password*
  name: Password
  href: api/MovieDiscovery.Server.Contracts.User.UserRequest.html#MovieDiscovery_Server_Contracts_User_UserRequest_Password_
  commentId: Overload:MovieDiscovery.Server.Contracts.User.UserRequest.Password
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.User.UserRequest.Password
  nameWithType: UserRequest.Password
- uid: MovieDiscovery.Server.Contracts.User.UserRequest.Username
  name: Username
  href: api/MovieDiscovery.Server.Contracts.User.UserRequest.html#MovieDiscovery_Server_Contracts_User_UserRequest_Username
  commentId: P:MovieDiscovery.Server.Contracts.User.UserRequest.Username
  fullName: MovieDiscovery.Server.Contracts.User.UserRequest.Username
  nameWithType: UserRequest.Username
- uid: MovieDiscovery.Server.Contracts.User.UserRequest.Username*
  name: Username
  href: api/MovieDiscovery.Server.Contracts.User.UserRequest.html#MovieDiscovery_Server_Contracts_User_UserRequest_Username_
  commentId: Overload:MovieDiscovery.Server.Contracts.User.UserRequest.Username
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.User.UserRequest.Username
  nameWithType: UserRequest.Username
- uid: MovieDiscovery.Server.Contracts.User.UserResponse
  name: UserResponse
  href: api/MovieDiscovery.Server.Contracts.User.UserResponse.html
  commentId: T:MovieDiscovery.Server.Contracts.User.UserResponse
  fullName: MovieDiscovery.Server.Contracts.User.UserResponse
  nameWithType: UserResponse
- uid: MovieDiscovery.Server.Contracts.User.UserResponse.Email
  name: Email
  href: api/MovieDiscovery.Server.Contracts.User.UserResponse.html#MovieDiscovery_Server_Contracts_User_UserResponse_Email
  commentId: P:MovieDiscovery.Server.Contracts.User.UserResponse.Email
  fullName: MovieDiscovery.Server.Contracts.User.UserResponse.Email
  nameWithType: UserResponse.Email
- uid: MovieDiscovery.Server.Contracts.User.UserResponse.Email*
  name: Email
  href: api/MovieDiscovery.Server.Contracts.User.UserResponse.html#MovieDiscovery_Server_Contracts_User_UserResponse_Email_
  commentId: Overload:MovieDiscovery.Server.Contracts.User.UserResponse.Email
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.User.UserResponse.Email
  nameWithType: UserResponse.Email
- uid: MovieDiscovery.Server.Contracts.User.UserResponse.Id
  name: Id
  href: api/MovieDiscovery.Server.Contracts.User.UserResponse.html#MovieDiscovery_Server_Contracts_User_UserResponse_Id
  commentId: P:MovieDiscovery.Server.Contracts.User.UserResponse.Id
  fullName: MovieDiscovery.Server.Contracts.User.UserResponse.Id
  nameWithType: UserResponse.Id
- uid: MovieDiscovery.Server.Contracts.User.UserResponse.Id*
  name: Id
  href: api/MovieDiscovery.Server.Contracts.User.UserResponse.html#MovieDiscovery_Server_Contracts_User_UserResponse_Id_
  commentId: Overload:MovieDiscovery.Server.Contracts.User.UserResponse.Id
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.User.UserResponse.Id
  nameWithType: UserResponse.Id
- uid: MovieDiscovery.Server.Contracts.User.UserResponse.Username
  name: Username
  href: api/MovieDiscovery.Server.Contracts.User.UserResponse.html#MovieDiscovery_Server_Contracts_User_UserResponse_Username
  commentId: P:MovieDiscovery.Server.Contracts.User.UserResponse.Username
  fullName: MovieDiscovery.Server.Contracts.User.UserResponse.Username
  nameWithType: UserResponse.Username
- uid: MovieDiscovery.Server.Contracts.User.UserResponse.Username*
  name: Username
  href: api/MovieDiscovery.Server.Contracts.User.UserResponse.html#MovieDiscovery_Server_Contracts_User_UserResponse_Username_
  commentId: Overload:MovieDiscovery.Server.Contracts.User.UserResponse.Username
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.User.UserResponse.Username
  nameWithType: UserResponse.Username
- uid: MovieDiscovery.Server.Contracts.User.UserResponseWithPassword
  name: UserResponseWithPassword
  href: api/MovieDiscovery.Server.Contracts.User.UserResponseWithPassword.html
  commentId: T:MovieDiscovery.Server.Contracts.User.UserResponseWithPassword
  fullName: MovieDiscovery.Server.Contracts.User.UserResponseWithPassword
  nameWithType: UserResponseWithPassword
- uid: MovieDiscovery.Server.Contracts.User.UserResponseWithPassword.Password
  name: Password
  href: api/MovieDiscovery.Server.Contracts.User.UserResponseWithPassword.html#MovieDiscovery_Server_Contracts_User_UserResponseWithPassword_Password
  commentId: P:MovieDiscovery.Server.Contracts.User.UserResponseWithPassword.Password
  fullName: MovieDiscovery.Server.Contracts.User.UserResponseWithPassword.Password
  nameWithType: UserResponseWithPassword.Password
- uid: MovieDiscovery.Server.Contracts.User.UserResponseWithPassword.Password*
  name: Password
  href: api/MovieDiscovery.Server.Contracts.User.UserResponseWithPassword.html#MovieDiscovery_Server_Contracts_User_UserResponseWithPassword_Password_
  commentId: Overload:MovieDiscovery.Server.Contracts.User.UserResponseWithPassword.Password
  isSpec: "True"
  fullName: MovieDiscovery.Server.Contracts.User.UserResponseWithPassword.Password
  nameWithType: UserResponseWithPassword.Password
- uid: MovieDiscovery.Server.Endpoints
  name: MovieDiscovery.Server.Endpoints
  href: api/MovieDiscovery.Server.Endpoints.html
  commentId: N:MovieDiscovery.Server.Endpoints
  fullName: MovieDiscovery.Server.Endpoints
  nameWithType: MovieDiscovery.Server.Endpoints
- uid: MovieDiscovery.Server.Endpoints.AccountEndpoints
  name: AccountEndpoints
  href: api/MovieDiscovery.Server.Endpoints.AccountEndpoints.html
  commentId: T:MovieDiscovery.Server.Endpoints.AccountEndpoints
  fullName: MovieDiscovery.Server.Endpoints.AccountEndpoints
  nameWithType: AccountEndpoints
- uid: MovieDiscovery.Server.Endpoints.AccountEndpoints.MapAccountEndPoints(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)
  name: MapAccountEndPoints(IEndpointRouteBuilder)
  href: api/MovieDiscovery.Server.Endpoints.AccountEndpoints.html#MovieDiscovery_Server_Endpoints_AccountEndpoints_MapAccountEndPoints_Microsoft_AspNetCore_Routing_IEndpointRouteBuilder_
  commentId: M:MovieDiscovery.Server.Endpoints.AccountEndpoints.MapAccountEndPoints(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)
  fullName: MovieDiscovery.Server.Endpoints.AccountEndpoints.MapAccountEndPoints(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)
  nameWithType: AccountEndpoints.MapAccountEndPoints(IEndpointRouteBuilder)
- uid: MovieDiscovery.Server.Endpoints.AccountEndpoints.MapAccountEndPoints*
  name: MapAccountEndPoints
  href: api/MovieDiscovery.Server.Endpoints.AccountEndpoints.html#MovieDiscovery_Server_Endpoints_AccountEndpoints_MapAccountEndPoints_
  commentId: Overload:MovieDiscovery.Server.Endpoints.AccountEndpoints.MapAccountEndPoints
  isSpec: "True"
  fullName: MovieDiscovery.Server.Endpoints.AccountEndpoints.MapAccountEndPoints
  nameWithType: AccountEndpoints.MapAccountEndPoints
- uid: MovieDiscovery.Server.Endpoints.GenreEndpoints
  name: GenreEndpoints
  href: api/MovieDiscovery.Server.Endpoints.GenreEndpoints.html
  commentId: T:MovieDiscovery.Server.Endpoints.GenreEndpoints
  fullName: MovieDiscovery.Server.Endpoints.GenreEndpoints
  nameWithType: GenreEndpoints
- uid: MovieDiscovery.Server.Endpoints.GenreEndpoints.MapGenreEndPoints(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)
  name: MapGenreEndPoints(IEndpointRouteBuilder)
  href: api/MovieDiscovery.Server.Endpoints.GenreEndpoints.html#MovieDiscovery_Server_Endpoints_GenreEndpoints_MapGenreEndPoints_Microsoft_AspNetCore_Routing_IEndpointRouteBuilder_
  commentId: M:MovieDiscovery.Server.Endpoints.GenreEndpoints.MapGenreEndPoints(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)
  fullName: MovieDiscovery.Server.Endpoints.GenreEndpoints.MapGenreEndPoints(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)
  nameWithType: GenreEndpoints.MapGenreEndPoints(IEndpointRouteBuilder)
- uid: MovieDiscovery.Server.Endpoints.GenreEndpoints.MapGenreEndPoints*
  name: MapGenreEndPoints
  href: api/MovieDiscovery.Server.Endpoints.GenreEndpoints.html#MovieDiscovery_Server_Endpoints_GenreEndpoints_MapGenreEndPoints_
  commentId: Overload:MovieDiscovery.Server.Endpoints.GenreEndpoints.MapGenreEndPoints
  isSpec: "True"
  fullName: MovieDiscovery.Server.Endpoints.GenreEndpoints.MapGenreEndPoints
  nameWithType: GenreEndpoints.MapGenreEndPoints
- uid: MovieDiscovery.Server.Endpoints.MovieEndpoints
  name: MovieEndpoints
  href: api/MovieDiscovery.Server.Endpoints.MovieEndpoints.html
  commentId: T:MovieDiscovery.Server.Endpoints.MovieEndpoints
  fullName: MovieDiscovery.Server.Endpoints.MovieEndpoints
  nameWithType: MovieEndpoints
- uid: MovieDiscovery.Server.Endpoints.MovieEndpoints.MapMovieEndPoints(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)
  name: MapMovieEndPoints(IEndpointRouteBuilder)
  href: api/MovieDiscovery.Server.Endpoints.MovieEndpoints.html#MovieDiscovery_Server_Endpoints_MovieEndpoints_MapMovieEndPoints_Microsoft_AspNetCore_Routing_IEndpointRouteBuilder_
  commentId: M:MovieDiscovery.Server.Endpoints.MovieEndpoints.MapMovieEndPoints(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)
  fullName: MovieDiscovery.Server.Endpoints.MovieEndpoints.MapMovieEndPoints(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)
  nameWithType: MovieEndpoints.MapMovieEndPoints(IEndpointRouteBuilder)
- uid: MovieDiscovery.Server.Endpoints.MovieEndpoints.MapMovieEndPoints*
  name: MapMovieEndPoints
  href: api/MovieDiscovery.Server.Endpoints.MovieEndpoints.html#MovieDiscovery_Server_Endpoints_MovieEndpoints_MapMovieEndPoints_
  commentId: Overload:MovieDiscovery.Server.Endpoints.MovieEndpoints.MapMovieEndPoints
  isSpec: "True"
  fullName: MovieDiscovery.Server.Endpoints.MovieEndpoints.MapMovieEndPoints
  nameWithType: MovieEndpoints.MapMovieEndPoints
- uid: MovieDiscovery.Server.Exceptions
  name: MovieDiscovery.Server.Exceptions
  href: api/MovieDiscovery.Server.Exceptions.html
  commentId: N:MovieDiscovery.Server.Exceptions
  fullName: MovieDiscovery.Server.Exceptions
  nameWithType: MovieDiscovery.Server.Exceptions
- uid: MovieDiscovery.Server.Exceptions.GlobalExceptionHandler
  name: GlobalExceptionHandler
  href: api/MovieDiscovery.Server.Exceptions.GlobalExceptionHandler.html
  commentId: T:MovieDiscovery.Server.Exceptions.GlobalExceptionHandler
  fullName: MovieDiscovery.Server.Exceptions.GlobalExceptionHandler
  nameWithType: GlobalExceptionHandler
- uid: MovieDiscovery.Server.Exceptions.GlobalExceptionHandler.TryHandleAsync(Microsoft.AspNetCore.Http.HttpContext,System.Exception,System.Threading.CancellationToken)
  name: TryHandleAsync(HttpContext, Exception, CancellationToken)
  href: api/MovieDiscovery.Server.Exceptions.GlobalExceptionHandler.html#MovieDiscovery_Server_Exceptions_GlobalExceptionHandler_TryHandleAsync_Microsoft_AspNetCore_Http_HttpContext_System_Exception_System_Threading_CancellationToken_
  commentId: M:MovieDiscovery.Server.Exceptions.GlobalExceptionHandler.TryHandleAsync(Microsoft.AspNetCore.Http.HttpContext,System.Exception,System.Threading.CancellationToken)
  fullName: MovieDiscovery.Server.Exceptions.GlobalExceptionHandler.TryHandleAsync(Microsoft.AspNetCore.Http.HttpContext, System.Exception, System.Threading.CancellationToken)
  nameWithType: GlobalExceptionHandler.TryHandleAsync(HttpContext, Exception, CancellationToken)
- uid: MovieDiscovery.Server.Exceptions.GlobalExceptionHandler.TryHandleAsync*
  name: TryHandleAsync
  href: api/MovieDiscovery.Server.Exceptions.GlobalExceptionHandler.html#MovieDiscovery_Server_Exceptions_GlobalExceptionHandler_TryHandleAsync_
  commentId: Overload:MovieDiscovery.Server.Exceptions.GlobalExceptionHandler.TryHandleAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Exceptions.GlobalExceptionHandler.TryHandleAsync
  nameWithType: GlobalExceptionHandler.TryHandleAsync
- uid: MovieDiscovery.Server.Exceptions.MovieAlreadyExistsException
  name: MovieAlreadyExistsException
  href: api/MovieDiscovery.Server.Exceptions.MovieAlreadyExistsException.html
  commentId: T:MovieDiscovery.Server.Exceptions.MovieAlreadyExistsException
  fullName: MovieDiscovery.Server.Exceptions.MovieAlreadyExistsException
  nameWithType: MovieAlreadyExistsException
- uid: MovieDiscovery.Server.Exceptions.MovieAlreadyExistsException.#ctor(System.String)
  name: MovieAlreadyExistsException(string)
  href: api/MovieDiscovery.Server.Exceptions.MovieAlreadyExistsException.html#MovieDiscovery_Server_Exceptions_MovieAlreadyExistsException__ctor_System_String_
  commentId: M:MovieDiscovery.Server.Exceptions.MovieAlreadyExistsException.#ctor(System.String)
  name.vb: New(String)
  fullName: MovieDiscovery.Server.Exceptions.MovieAlreadyExistsException.MovieAlreadyExistsException(string)
  fullName.vb: MovieDiscovery.Server.Exceptions.MovieAlreadyExistsException.New(String)
  nameWithType: MovieAlreadyExistsException.MovieAlreadyExistsException(string)
  nameWithType.vb: MovieAlreadyExistsException.New(String)
- uid: MovieDiscovery.Server.Exceptions.MovieAlreadyExistsException.#ctor*
  name: MovieAlreadyExistsException
  href: api/MovieDiscovery.Server.Exceptions.MovieAlreadyExistsException.html#MovieDiscovery_Server_Exceptions_MovieAlreadyExistsException__ctor_
  commentId: Overload:MovieDiscovery.Server.Exceptions.MovieAlreadyExistsException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MovieDiscovery.Server.Exceptions.MovieAlreadyExistsException.MovieAlreadyExistsException
  fullName.vb: MovieDiscovery.Server.Exceptions.MovieAlreadyExistsException.New
  nameWithType: MovieAlreadyExistsException.MovieAlreadyExistsException
  nameWithType.vb: MovieAlreadyExistsException.New
- uid: MovieDiscovery.Server.Exceptions.MovieNotFoundException
  name: MovieNotFoundException
  href: api/MovieDiscovery.Server.Exceptions.MovieNotFoundException.html
  commentId: T:MovieDiscovery.Server.Exceptions.MovieNotFoundException
  fullName: MovieDiscovery.Server.Exceptions.MovieNotFoundException
  nameWithType: MovieNotFoundException
- uid: MovieDiscovery.Server.Exceptions.MovieNotFoundException.#ctor(System.String)
  name: MovieNotFoundException(string)
  href: api/MovieDiscovery.Server.Exceptions.MovieNotFoundException.html#MovieDiscovery_Server_Exceptions_MovieNotFoundException__ctor_System_String_
  commentId: M:MovieDiscovery.Server.Exceptions.MovieNotFoundException.#ctor(System.String)
  name.vb: New(String)
  fullName: MovieDiscovery.Server.Exceptions.MovieNotFoundException.MovieNotFoundException(string)
  fullName.vb: MovieDiscovery.Server.Exceptions.MovieNotFoundException.New(String)
  nameWithType: MovieNotFoundException.MovieNotFoundException(string)
  nameWithType.vb: MovieNotFoundException.New(String)
- uid: MovieDiscovery.Server.Exceptions.MovieNotFoundException.#ctor*
  name: MovieNotFoundException
  href: api/MovieDiscovery.Server.Exceptions.MovieNotFoundException.html#MovieDiscovery_Server_Exceptions_MovieNotFoundException__ctor_
  commentId: Overload:MovieDiscovery.Server.Exceptions.MovieNotFoundException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MovieDiscovery.Server.Exceptions.MovieNotFoundException.MovieNotFoundException
  fullName.vb: MovieDiscovery.Server.Exceptions.MovieNotFoundException.New
  nameWithType: MovieNotFoundException.MovieNotFoundException
  nameWithType.vb: MovieNotFoundException.New
- uid: MovieDiscovery.Server.Exceptions.NoMoviesFoundException
  name: NoMoviesFoundException
  href: api/MovieDiscovery.Server.Exceptions.NoMoviesFoundException.html
  commentId: T:MovieDiscovery.Server.Exceptions.NoMoviesFoundException
  fullName: MovieDiscovery.Server.Exceptions.NoMoviesFoundException
  nameWithType: NoMoviesFoundException
- uid: MovieDiscovery.Server.Exceptions.NoMoviesFoundException.#ctor
  name: NoMoviesFoundException()
  href: api/MovieDiscovery.Server.Exceptions.NoMoviesFoundException.html#MovieDiscovery_Server_Exceptions_NoMoviesFoundException__ctor
  commentId: M:MovieDiscovery.Server.Exceptions.NoMoviesFoundException.#ctor
  name.vb: New()
  fullName: MovieDiscovery.Server.Exceptions.NoMoviesFoundException.NoMoviesFoundException()
  fullName.vb: MovieDiscovery.Server.Exceptions.NoMoviesFoundException.New()
  nameWithType: NoMoviesFoundException.NoMoviesFoundException()
  nameWithType.vb: NoMoviesFoundException.New()
- uid: MovieDiscovery.Server.Exceptions.NoMoviesFoundException.#ctor*
  name: NoMoviesFoundException
  href: api/MovieDiscovery.Server.Exceptions.NoMoviesFoundException.html#MovieDiscovery_Server_Exceptions_NoMoviesFoundException__ctor_
  commentId: Overload:MovieDiscovery.Server.Exceptions.NoMoviesFoundException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MovieDiscovery.Server.Exceptions.NoMoviesFoundException.NoMoviesFoundException
  fullName.vb: MovieDiscovery.Server.Exceptions.NoMoviesFoundException.New
  nameWithType: NoMoviesFoundException.NoMoviesFoundException
  nameWithType.vb: NoMoviesFoundException.New
- uid: MovieDiscovery.Server.Exceptions.UserAlreadyExistsException
  name: UserAlreadyExistsException
  href: api/MovieDiscovery.Server.Exceptions.UserAlreadyExistsException.html
  commentId: T:MovieDiscovery.Server.Exceptions.UserAlreadyExistsException
  fullName: MovieDiscovery.Server.Exceptions.UserAlreadyExistsException
  nameWithType: UserAlreadyExistsException
- uid: MovieDiscovery.Server.Exceptions.UserAlreadyExistsException.#ctor
  name: UserAlreadyExistsException()
  href: api/MovieDiscovery.Server.Exceptions.UserAlreadyExistsException.html#MovieDiscovery_Server_Exceptions_UserAlreadyExistsException__ctor
  commentId: M:MovieDiscovery.Server.Exceptions.UserAlreadyExistsException.#ctor
  name.vb: New()
  fullName: MovieDiscovery.Server.Exceptions.UserAlreadyExistsException.UserAlreadyExistsException()
  fullName.vb: MovieDiscovery.Server.Exceptions.UserAlreadyExistsException.New()
  nameWithType: UserAlreadyExistsException.UserAlreadyExistsException()
  nameWithType.vb: UserAlreadyExistsException.New()
- uid: MovieDiscovery.Server.Exceptions.UserAlreadyExistsException.#ctor*
  name: UserAlreadyExistsException
  href: api/MovieDiscovery.Server.Exceptions.UserAlreadyExistsException.html#MovieDiscovery_Server_Exceptions_UserAlreadyExistsException__ctor_
  commentId: Overload:MovieDiscovery.Server.Exceptions.UserAlreadyExistsException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MovieDiscovery.Server.Exceptions.UserAlreadyExistsException.UserAlreadyExistsException
  fullName.vb: MovieDiscovery.Server.Exceptions.UserAlreadyExistsException.New
  nameWithType: UserAlreadyExistsException.UserAlreadyExistsException
  nameWithType.vb: UserAlreadyExistsException.New
- uid: MovieDiscovery.Server.Helpers
  name: MovieDiscovery.Server.Helpers
  href: api/MovieDiscovery.Server.Helpers.html
  commentId: N:MovieDiscovery.Server.Helpers
  fullName: MovieDiscovery.Server.Helpers
  nameWithType: MovieDiscovery.Server.Helpers
- uid: MovieDiscovery.Server.Helpers.ValidationUtilities
  name: ValidationUtilities
  href: api/MovieDiscovery.Server.Helpers.ValidationUtilities.html
  commentId: T:MovieDiscovery.Server.Helpers.ValidationUtilities
  fullName: MovieDiscovery.Server.Helpers.ValidationUtilities
  nameWithType: ValidationUtilities
- uid: MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateCreateUserRequest(MovieDiscovery.Server.Contracts.User.CreateUserRequest)
  name: ValidateCreateUserRequest(CreateUserRequest)
  href: api/MovieDiscovery.Server.Helpers.ValidationUtilities.html#MovieDiscovery_Server_Helpers_ValidationUtilities_ValidateCreateUserRequest_MovieDiscovery_Server_Contracts_User_CreateUserRequest_
  commentId: M:MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateCreateUserRequest(MovieDiscovery.Server.Contracts.User.CreateUserRequest)
  fullName: MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateCreateUserRequest(MovieDiscovery.Server.Contracts.User.CreateUserRequest)
  nameWithType: ValidationUtilities.ValidateCreateUserRequest(CreateUserRequest)
- uid: MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateCreateUserRequest*
  name: ValidateCreateUserRequest
  href: api/MovieDiscovery.Server.Helpers.ValidationUtilities.html#MovieDiscovery_Server_Helpers_ValidationUtilities_ValidateCreateUserRequest_
  commentId: Overload:MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateCreateUserRequest
  isSpec: "True"
  fullName: MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateCreateUserRequest
  nameWithType: ValidationUtilities.ValidateCreateUserRequest
- uid: MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateMovieRequest(MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest)
  name: ValidateMovieRequest(CreateMovieRequest)
  href: api/MovieDiscovery.Server.Helpers.ValidationUtilities.html#MovieDiscovery_Server_Helpers_ValidationUtilities_ValidateMovieRequest_MovieDiscovery_Server_Contracts_Movie_CreateMovieRequest_
  commentId: M:MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateMovieRequest(MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest)
  fullName: MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateMovieRequest(MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest)
  nameWithType: ValidationUtilities.ValidateMovieRequest(CreateMovieRequest)
- uid: MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateMovieRequest*
  name: ValidateMovieRequest
  href: api/MovieDiscovery.Server.Helpers.ValidationUtilities.html#MovieDiscovery_Server_Helpers_ValidationUtilities_ValidateMovieRequest_
  commentId: Overload:MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateMovieRequest
  isSpec: "True"
  fullName: MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateMovieRequest
  nameWithType: ValidationUtilities.ValidateMovieRequest
- uid: MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateUpdateUserRequest(MovieDiscovery.Server.Contracts.User.UpdateUserRequest)
  name: ValidateUpdateUserRequest(UpdateUserRequest)
  href: api/MovieDiscovery.Server.Helpers.ValidationUtilities.html#MovieDiscovery_Server_Helpers_ValidationUtilities_ValidateUpdateUserRequest_MovieDiscovery_Server_Contracts_User_UpdateUserRequest_
  commentId: M:MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateUpdateUserRequest(MovieDiscovery.Server.Contracts.User.UpdateUserRequest)
  fullName: MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateUpdateUserRequest(MovieDiscovery.Server.Contracts.User.UpdateUserRequest)
  nameWithType: ValidationUtilities.ValidateUpdateUserRequest(UpdateUserRequest)
- uid: MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateUpdateUserRequest*
  name: ValidateUpdateUserRequest
  href: api/MovieDiscovery.Server.Helpers.ValidationUtilities.html#MovieDiscovery_Server_Helpers_ValidationUtilities_ValidateUpdateUserRequest_
  commentId: Overload:MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateUpdateUserRequest
  isSpec: "True"
  fullName: MovieDiscovery.Server.Helpers.ValidationUtilities.ValidateUpdateUserRequest
  nameWithType: ValidationUtilities.ValidateUpdateUserRequest
- uid: MovieDiscovery.Server.Interfaces
  name: MovieDiscovery.Server.Interfaces
  href: api/MovieDiscovery.Server.Interfaces.html
  commentId: N:MovieDiscovery.Server.Interfaces
  fullName: MovieDiscovery.Server.Interfaces
  nameWithType: MovieDiscovery.Server.Interfaces
- uid: MovieDiscovery.Server.Interfaces.IGenreService
  name: IGenreService
  href: api/MovieDiscovery.Server.Interfaces.IGenreService.html
  commentId: T:MovieDiscovery.Server.Interfaces.IGenreService
  fullName: MovieDiscovery.Server.Interfaces.IGenreService
  nameWithType: IGenreService
- uid: MovieDiscovery.Server.Interfaces.IGenreService.GetAllAsync
  name: GetAllAsync()
  href: api/MovieDiscovery.Server.Interfaces.IGenreService.html#MovieDiscovery_Server_Interfaces_IGenreService_GetAllAsync
  commentId: M:MovieDiscovery.Server.Interfaces.IGenreService.GetAllAsync
  fullName: MovieDiscovery.Server.Interfaces.IGenreService.GetAllAsync()
  nameWithType: IGenreService.GetAllAsync()
- uid: MovieDiscovery.Server.Interfaces.IGenreService.GetAllAsync*
  name: GetAllAsync
  href: api/MovieDiscovery.Server.Interfaces.IGenreService.html#MovieDiscovery_Server_Interfaces_IGenreService_GetAllAsync_
  commentId: Overload:MovieDiscovery.Server.Interfaces.IGenreService.GetAllAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Interfaces.IGenreService.GetAllAsync
  nameWithType: IGenreService.GetAllAsync
- uid: MovieDiscovery.Server.Interfaces.IMovieService
  name: IMovieService
  href: api/MovieDiscovery.Server.Interfaces.IMovieService.html
  commentId: T:MovieDiscovery.Server.Interfaces.IMovieService
  fullName: MovieDiscovery.Server.Interfaces.IMovieService
  nameWithType: IMovieService
- uid: MovieDiscovery.Server.Interfaces.IMovieService.AddMovieAsync(MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest,System.Int32)
  name: AddMovieAsync(CreateMovieRequest, int)
  href: api/MovieDiscovery.Server.Interfaces.IMovieService.html#MovieDiscovery_Server_Interfaces_IMovieService_AddMovieAsync_MovieDiscovery_Server_Contracts_Movie_CreateMovieRequest_System_Int32_
  commentId: M:MovieDiscovery.Server.Interfaces.IMovieService.AddMovieAsync(MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest,System.Int32)
  name.vb: AddMovieAsync(CreateMovieRequest, Integer)
  fullName: MovieDiscovery.Server.Interfaces.IMovieService.AddMovieAsync(MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest, int)
  fullName.vb: MovieDiscovery.Server.Interfaces.IMovieService.AddMovieAsync(MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest, Integer)
  nameWithType: IMovieService.AddMovieAsync(CreateMovieRequest, int)
  nameWithType.vb: IMovieService.AddMovieAsync(CreateMovieRequest, Integer)
- uid: MovieDiscovery.Server.Interfaces.IMovieService.AddMovieAsync*
  name: AddMovieAsync
  href: api/MovieDiscovery.Server.Interfaces.IMovieService.html#MovieDiscovery_Server_Interfaces_IMovieService_AddMovieAsync_
  commentId: Overload:MovieDiscovery.Server.Interfaces.IMovieService.AddMovieAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Interfaces.IMovieService.AddMovieAsync
  nameWithType: IMovieService.AddMovieAsync
- uid: MovieDiscovery.Server.Interfaces.IMovieService.GetAllAsync
  name: GetAllAsync()
  href: api/MovieDiscovery.Server.Interfaces.IMovieService.html#MovieDiscovery_Server_Interfaces_IMovieService_GetAllAsync
  commentId: M:MovieDiscovery.Server.Interfaces.IMovieService.GetAllAsync
  fullName: MovieDiscovery.Server.Interfaces.IMovieService.GetAllAsync()
  nameWithType: IMovieService.GetAllAsync()
- uid: MovieDiscovery.Server.Interfaces.IMovieService.GetAllAsync*
  name: GetAllAsync
  href: api/MovieDiscovery.Server.Interfaces.IMovieService.html#MovieDiscovery_Server_Interfaces_IMovieService_GetAllAsync_
  commentId: Overload:MovieDiscovery.Server.Interfaces.IMovieService.GetAllAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Interfaces.IMovieService.GetAllAsync
  nameWithType: IMovieService.GetAllAsync
- uid: MovieDiscovery.Server.Interfaces.IMovieService.GetByTitleAsync(System.String)
  name: GetByTitleAsync(string)
  href: api/MovieDiscovery.Server.Interfaces.IMovieService.html#MovieDiscovery_Server_Interfaces_IMovieService_GetByTitleAsync_System_String_
  commentId: M:MovieDiscovery.Server.Interfaces.IMovieService.GetByTitleAsync(System.String)
  name.vb: GetByTitleAsync(String)
  fullName: MovieDiscovery.Server.Interfaces.IMovieService.GetByTitleAsync(string)
  fullName.vb: MovieDiscovery.Server.Interfaces.IMovieService.GetByTitleAsync(String)
  nameWithType: IMovieService.GetByTitleAsync(string)
  nameWithType.vb: IMovieService.GetByTitleAsync(String)
- uid: MovieDiscovery.Server.Interfaces.IMovieService.GetByTitleAsync*
  name: GetByTitleAsync
  href: api/MovieDiscovery.Server.Interfaces.IMovieService.html#MovieDiscovery_Server_Interfaces_IMovieService_GetByTitleAsync_
  commentId: Overload:MovieDiscovery.Server.Interfaces.IMovieService.GetByTitleAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Interfaces.IMovieService.GetByTitleAsync
  nameWithType: IMovieService.GetByTitleAsync
- uid: MovieDiscovery.Server.Interfaces.IMovieService.GetRandomMovieAsync
  name: GetRandomMovieAsync()
  href: api/MovieDiscovery.Server.Interfaces.IMovieService.html#MovieDiscovery_Server_Interfaces_IMovieService_GetRandomMovieAsync
  commentId: M:MovieDiscovery.Server.Interfaces.IMovieService.GetRandomMovieAsync
  fullName: MovieDiscovery.Server.Interfaces.IMovieService.GetRandomMovieAsync()
  nameWithType: IMovieService.GetRandomMovieAsync()
- uid: MovieDiscovery.Server.Interfaces.IMovieService.GetRandomMovieAsync*
  name: GetRandomMovieAsync
  href: api/MovieDiscovery.Server.Interfaces.IMovieService.html#MovieDiscovery_Server_Interfaces_IMovieService_GetRandomMovieAsync_
  commentId: Overload:MovieDiscovery.Server.Interfaces.IMovieService.GetRandomMovieAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Interfaces.IMovieService.GetRandomMovieAsync
  nameWithType: IMovieService.GetRandomMovieAsync
- uid: MovieDiscovery.Server.Interfaces.IUserService
  name: IUserService
  href: api/MovieDiscovery.Server.Interfaces.IUserService.html
  commentId: T:MovieDiscovery.Server.Interfaces.IUserService
  fullName: MovieDiscovery.Server.Interfaces.IUserService
  nameWithType: IUserService
- uid: MovieDiscovery.Server.Interfaces.IUserService.AddUser(MovieDiscovery.Server.Contracts.User.CreateUserRequest)
  name: AddUser(CreateUserRequest)
  href: api/MovieDiscovery.Server.Interfaces.IUserService.html#MovieDiscovery_Server_Interfaces_IUserService_AddUser_MovieDiscovery_Server_Contracts_User_CreateUserRequest_
  commentId: M:MovieDiscovery.Server.Interfaces.IUserService.AddUser(MovieDiscovery.Server.Contracts.User.CreateUserRequest)
  fullName: MovieDiscovery.Server.Interfaces.IUserService.AddUser(MovieDiscovery.Server.Contracts.User.CreateUserRequest)
  nameWithType: IUserService.AddUser(CreateUserRequest)
- uid: MovieDiscovery.Server.Interfaces.IUserService.AddUser*
  name: AddUser
  href: api/MovieDiscovery.Server.Interfaces.IUserService.html#MovieDiscovery_Server_Interfaces_IUserService_AddUser_
  commentId: Overload:MovieDiscovery.Server.Interfaces.IUserService.AddUser
  isSpec: "True"
  fullName: MovieDiscovery.Server.Interfaces.IUserService.AddUser
  nameWithType: IUserService.AddUser
- uid: MovieDiscovery.Server.Interfaces.IUserService.DeleteUserAsync(System.Int32)
  name: DeleteUserAsync(int)
  href: api/MovieDiscovery.Server.Interfaces.IUserService.html#MovieDiscovery_Server_Interfaces_IUserService_DeleteUserAsync_System_Int32_
  commentId: M:MovieDiscovery.Server.Interfaces.IUserService.DeleteUserAsync(System.Int32)
  name.vb: DeleteUserAsync(Integer)
  fullName: MovieDiscovery.Server.Interfaces.IUserService.DeleteUserAsync(int)
  fullName.vb: MovieDiscovery.Server.Interfaces.IUserService.DeleteUserAsync(Integer)
  nameWithType: IUserService.DeleteUserAsync(int)
  nameWithType.vb: IUserService.DeleteUserAsync(Integer)
- uid: MovieDiscovery.Server.Interfaces.IUserService.DeleteUserAsync*
  name: DeleteUserAsync
  href: api/MovieDiscovery.Server.Interfaces.IUserService.html#MovieDiscovery_Server_Interfaces_IUserService_DeleteUserAsync_
  commentId: Overload:MovieDiscovery.Server.Interfaces.IUserService.DeleteUserAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Interfaces.IUserService.DeleteUserAsync
  nameWithType: IUserService.DeleteUserAsync
- uid: MovieDiscovery.Server.Interfaces.IUserService.GetUserByEmailAndUsernameAsync(System.String,System.String)
  name: GetUserByEmailAndUsernameAsync(string, string)
  href: api/MovieDiscovery.Server.Interfaces.IUserService.html#MovieDiscovery_Server_Interfaces_IUserService_GetUserByEmailAndUsernameAsync_System_String_System_String_
  commentId: M:MovieDiscovery.Server.Interfaces.IUserService.GetUserByEmailAndUsernameAsync(System.String,System.String)
  name.vb: GetUserByEmailAndUsernameAsync(String, String)
  fullName: MovieDiscovery.Server.Interfaces.IUserService.GetUserByEmailAndUsernameAsync(string, string)
  fullName.vb: MovieDiscovery.Server.Interfaces.IUserService.GetUserByEmailAndUsernameAsync(String, String)
  nameWithType: IUserService.GetUserByEmailAndUsernameAsync(string, string)
  nameWithType.vb: IUserService.GetUserByEmailAndUsernameAsync(String, String)
- uid: MovieDiscovery.Server.Interfaces.IUserService.GetUserByEmailAndUsernameAsync*
  name: GetUserByEmailAndUsernameAsync
  href: api/MovieDiscovery.Server.Interfaces.IUserService.html#MovieDiscovery_Server_Interfaces_IUserService_GetUserByEmailAndUsernameAsync_
  commentId: Overload:MovieDiscovery.Server.Interfaces.IUserService.GetUserByEmailAndUsernameAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Interfaces.IUserService.GetUserByEmailAndUsernameAsync
  nameWithType: IUserService.GetUserByEmailAndUsernameAsync
- uid: MovieDiscovery.Server.Interfaces.IUserService.GetUserByIdAsync(System.Int32)
  name: GetUserByIdAsync(int)
  href: api/MovieDiscovery.Server.Interfaces.IUserService.html#MovieDiscovery_Server_Interfaces_IUserService_GetUserByIdAsync_System_Int32_
  commentId: M:MovieDiscovery.Server.Interfaces.IUserService.GetUserByIdAsync(System.Int32)
  name.vb: GetUserByIdAsync(Integer)
  fullName: MovieDiscovery.Server.Interfaces.IUserService.GetUserByIdAsync(int)
  fullName.vb: MovieDiscovery.Server.Interfaces.IUserService.GetUserByIdAsync(Integer)
  nameWithType: IUserService.GetUserByIdAsync(int)
  nameWithType.vb: IUserService.GetUserByIdAsync(Integer)
- uid: MovieDiscovery.Server.Interfaces.IUserService.GetUserByIdAsync*
  name: GetUserByIdAsync
  href: api/MovieDiscovery.Server.Interfaces.IUserService.html#MovieDiscovery_Server_Interfaces_IUserService_GetUserByIdAsync_
  commentId: Overload:MovieDiscovery.Server.Interfaces.IUserService.GetUserByIdAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Interfaces.IUserService.GetUserByIdAsync
  nameWithType: IUserService.GetUserByIdAsync
- uid: MovieDiscovery.Server.Interfaces.IUserService.UpdateUserAsync(MovieDiscovery.Server.Contracts.User.UpdateUserRequest,System.Int32)
  name: UpdateUserAsync(UpdateUserRequest, int)
  href: api/MovieDiscovery.Server.Interfaces.IUserService.html#MovieDiscovery_Server_Interfaces_IUserService_UpdateUserAsync_MovieDiscovery_Server_Contracts_User_UpdateUserRequest_System_Int32_
  commentId: M:MovieDiscovery.Server.Interfaces.IUserService.UpdateUserAsync(MovieDiscovery.Server.Contracts.User.UpdateUserRequest,System.Int32)
  name.vb: UpdateUserAsync(UpdateUserRequest, Integer)
  fullName: MovieDiscovery.Server.Interfaces.IUserService.UpdateUserAsync(MovieDiscovery.Server.Contracts.User.UpdateUserRequest, int)
  fullName.vb: MovieDiscovery.Server.Interfaces.IUserService.UpdateUserAsync(MovieDiscovery.Server.Contracts.User.UpdateUserRequest, Integer)
  nameWithType: IUserService.UpdateUserAsync(UpdateUserRequest, int)
  nameWithType.vb: IUserService.UpdateUserAsync(UpdateUserRequest, Integer)
- uid: MovieDiscovery.Server.Interfaces.IUserService.UpdateUserAsync*
  name: UpdateUserAsync
  href: api/MovieDiscovery.Server.Interfaces.IUserService.html#MovieDiscovery_Server_Interfaces_IUserService_UpdateUserAsync_
  commentId: Overload:MovieDiscovery.Server.Interfaces.IUserService.UpdateUserAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Interfaces.IUserService.UpdateUserAsync
  nameWithType: IUserService.UpdateUserAsync
- uid: MovieDiscovery.Server.Migrations
  name: MovieDiscovery.Server.Migrations
  href: api/MovieDiscovery.Server.Migrations.html
  commentId: N:MovieDiscovery.Server.Migrations
  fullName: MovieDiscovery.Server.Migrations
  nameWithType: MovieDiscovery.Server.Migrations
- uid: MovieDiscovery.Server.Migrations.CreateUsersTable
  name: CreateUsersTable
  href: api/MovieDiscovery.Server.Migrations.CreateUsersTable.html
  commentId: T:MovieDiscovery.Server.Migrations.CreateUsersTable
  fullName: MovieDiscovery.Server.Migrations.CreateUsersTable
  nameWithType: CreateUsersTable
- uid: MovieDiscovery.Server.Migrations.CreateUsersTable.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MovieDiscovery.Server.Migrations.CreateUsersTable.html#MovieDiscovery_Server_Migrations_CreateUsersTable_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MovieDiscovery.Server.Migrations.CreateUsersTable.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MovieDiscovery.Server.Migrations.CreateUsersTable.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: CreateUsersTable.BuildTargetModel(ModelBuilder)
- uid: MovieDiscovery.Server.Migrations.CreateUsersTable.BuildTargetModel*
  name: BuildTargetModel
  href: api/MovieDiscovery.Server.Migrations.CreateUsersTable.html#MovieDiscovery_Server_Migrations_CreateUsersTable_BuildTargetModel_
  commentId: Overload:MovieDiscovery.Server.Migrations.CreateUsersTable.BuildTargetModel
  isSpec: "True"
  fullName: MovieDiscovery.Server.Migrations.CreateUsersTable.BuildTargetModel
  nameWithType: CreateUsersTable.BuildTargetModel
- uid: MovieDiscovery.Server.Migrations.CreateUsersTable.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MovieDiscovery.Server.Migrations.CreateUsersTable.html#MovieDiscovery_Server_Migrations_CreateUsersTable_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MovieDiscovery.Server.Migrations.CreateUsersTable.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MovieDiscovery.Server.Migrations.CreateUsersTable.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: CreateUsersTable.Down(MigrationBuilder)
- uid: MovieDiscovery.Server.Migrations.CreateUsersTable.Down*
  name: Down
  href: api/MovieDiscovery.Server.Migrations.CreateUsersTable.html#MovieDiscovery_Server_Migrations_CreateUsersTable_Down_
  commentId: Overload:MovieDiscovery.Server.Migrations.CreateUsersTable.Down
  isSpec: "True"
  fullName: MovieDiscovery.Server.Migrations.CreateUsersTable.Down
  nameWithType: CreateUsersTable.Down
- uid: MovieDiscovery.Server.Migrations.CreateUsersTable.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MovieDiscovery.Server.Migrations.CreateUsersTable.html#MovieDiscovery_Server_Migrations_CreateUsersTable_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MovieDiscovery.Server.Migrations.CreateUsersTable.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MovieDiscovery.Server.Migrations.CreateUsersTable.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: CreateUsersTable.Up(MigrationBuilder)
- uid: MovieDiscovery.Server.Migrations.CreateUsersTable.Up*
  name: Up
  href: api/MovieDiscovery.Server.Migrations.CreateUsersTable.html#MovieDiscovery_Server_Migrations_CreateUsersTable_Up_
  commentId: Overload:MovieDiscovery.Server.Migrations.CreateUsersTable.Up
  isSpec: "True"
  fullName: MovieDiscovery.Server.Migrations.CreateUsersTable.Up
  nameWithType: CreateUsersTable.Up
- uid: MovieDiscovery.Server.Migrations.InitialCreate
  name: InitialCreate
  href: api/MovieDiscovery.Server.Migrations.InitialCreate.html
  commentId: T:MovieDiscovery.Server.Migrations.InitialCreate
  fullName: MovieDiscovery.Server.Migrations.InitialCreate
  nameWithType: InitialCreate
- uid: MovieDiscovery.Server.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MovieDiscovery.Server.Migrations.InitialCreate.html#MovieDiscovery_Server_Migrations_InitialCreate_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MovieDiscovery.Server.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MovieDiscovery.Server.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: InitialCreate.BuildTargetModel(ModelBuilder)
- uid: MovieDiscovery.Server.Migrations.InitialCreate.BuildTargetModel*
  name: BuildTargetModel
  href: api/MovieDiscovery.Server.Migrations.InitialCreate.html#MovieDiscovery_Server_Migrations_InitialCreate_BuildTargetModel_
  commentId: Overload:MovieDiscovery.Server.Migrations.InitialCreate.BuildTargetModel
  isSpec: "True"
  fullName: MovieDiscovery.Server.Migrations.InitialCreate.BuildTargetModel
  nameWithType: InitialCreate.BuildTargetModel
- uid: MovieDiscovery.Server.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MovieDiscovery.Server.Migrations.InitialCreate.html#MovieDiscovery_Server_Migrations_InitialCreate_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MovieDiscovery.Server.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MovieDiscovery.Server.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: InitialCreate.Down(MigrationBuilder)
- uid: MovieDiscovery.Server.Migrations.InitialCreate.Down*
  name: Down
  href: api/MovieDiscovery.Server.Migrations.InitialCreate.html#MovieDiscovery_Server_Migrations_InitialCreate_Down_
  commentId: Overload:MovieDiscovery.Server.Migrations.InitialCreate.Down
  isSpec: "True"
  fullName: MovieDiscovery.Server.Migrations.InitialCreate.Down
  nameWithType: InitialCreate.Down
- uid: MovieDiscovery.Server.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MovieDiscovery.Server.Migrations.InitialCreate.html#MovieDiscovery_Server_Migrations_InitialCreate_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MovieDiscovery.Server.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MovieDiscovery.Server.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: InitialCreate.Up(MigrationBuilder)
- uid: MovieDiscovery.Server.Migrations.InitialCreate.Up*
  name: Up
  href: api/MovieDiscovery.Server.Migrations.InitialCreate.html#MovieDiscovery_Server_Migrations_InitialCreate_Up_
  commentId: Overload:MovieDiscovery.Server.Migrations.InitialCreate.Up
  isSpec: "True"
  fullName: MovieDiscovery.Server.Migrations.InitialCreate.Up
  nameWithType: InitialCreate.Up
- uid: MovieDiscovery.Server.Migrations.SeedDatabase
  name: SeedDatabase
  href: api/MovieDiscovery.Server.Migrations.SeedDatabase.html
  commentId: T:MovieDiscovery.Server.Migrations.SeedDatabase
  fullName: MovieDiscovery.Server.Migrations.SeedDatabase
  nameWithType: SeedDatabase
- uid: MovieDiscovery.Server.Migrations.SeedDatabase.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MovieDiscovery.Server.Migrations.SeedDatabase.html#MovieDiscovery_Server_Migrations_SeedDatabase_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MovieDiscovery.Server.Migrations.SeedDatabase.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MovieDiscovery.Server.Migrations.SeedDatabase.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: SeedDatabase.BuildTargetModel(ModelBuilder)
- uid: MovieDiscovery.Server.Migrations.SeedDatabase.BuildTargetModel*
  name: BuildTargetModel
  href: api/MovieDiscovery.Server.Migrations.SeedDatabase.html#MovieDiscovery_Server_Migrations_SeedDatabase_BuildTargetModel_
  commentId: Overload:MovieDiscovery.Server.Migrations.SeedDatabase.BuildTargetModel
  isSpec: "True"
  fullName: MovieDiscovery.Server.Migrations.SeedDatabase.BuildTargetModel
  nameWithType: SeedDatabase.BuildTargetModel
- uid: MovieDiscovery.Server.Migrations.SeedDatabase.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MovieDiscovery.Server.Migrations.SeedDatabase.html#MovieDiscovery_Server_Migrations_SeedDatabase_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MovieDiscovery.Server.Migrations.SeedDatabase.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MovieDiscovery.Server.Migrations.SeedDatabase.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: SeedDatabase.Down(MigrationBuilder)
- uid: MovieDiscovery.Server.Migrations.SeedDatabase.Down*
  name: Down
  href: api/MovieDiscovery.Server.Migrations.SeedDatabase.html#MovieDiscovery_Server_Migrations_SeedDatabase_Down_
  commentId: Overload:MovieDiscovery.Server.Migrations.SeedDatabase.Down
  isSpec: "True"
  fullName: MovieDiscovery.Server.Migrations.SeedDatabase.Down
  nameWithType: SeedDatabase.Down
- uid: MovieDiscovery.Server.Migrations.SeedDatabase.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MovieDiscovery.Server.Migrations.SeedDatabase.html#MovieDiscovery_Server_Migrations_SeedDatabase_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MovieDiscovery.Server.Migrations.SeedDatabase.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MovieDiscovery.Server.Migrations.SeedDatabase.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: SeedDatabase.Up(MigrationBuilder)
- uid: MovieDiscovery.Server.Migrations.SeedDatabase.Up*
  name: Up
  href: api/MovieDiscovery.Server.Migrations.SeedDatabase.html#MovieDiscovery_Server_Migrations_SeedDatabase_Up_
  commentId: Overload:MovieDiscovery.Server.Migrations.SeedDatabase.Up
  isSpec: "True"
  fullName: MovieDiscovery.Server.Migrations.SeedDatabase.Up
  nameWithType: SeedDatabase.Up
- uid: MovieDiscovery.Server.Migrations.SetNullOnUserDelete
  name: SetNullOnUserDelete
  href: api/MovieDiscovery.Server.Migrations.SetNullOnUserDelete.html
  commentId: T:MovieDiscovery.Server.Migrations.SetNullOnUserDelete
  fullName: MovieDiscovery.Server.Migrations.SetNullOnUserDelete
  nameWithType: SetNullOnUserDelete
- uid: MovieDiscovery.Server.Migrations.SetNullOnUserDelete.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MovieDiscovery.Server.Migrations.SetNullOnUserDelete.html#MovieDiscovery_Server_Migrations_SetNullOnUserDelete_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MovieDiscovery.Server.Migrations.SetNullOnUserDelete.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MovieDiscovery.Server.Migrations.SetNullOnUserDelete.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: SetNullOnUserDelete.BuildTargetModel(ModelBuilder)
- uid: MovieDiscovery.Server.Migrations.SetNullOnUserDelete.BuildTargetModel*
  name: BuildTargetModel
  href: api/MovieDiscovery.Server.Migrations.SetNullOnUserDelete.html#MovieDiscovery_Server_Migrations_SetNullOnUserDelete_BuildTargetModel_
  commentId: Overload:MovieDiscovery.Server.Migrations.SetNullOnUserDelete.BuildTargetModel
  isSpec: "True"
  fullName: MovieDiscovery.Server.Migrations.SetNullOnUserDelete.BuildTargetModel
  nameWithType: SetNullOnUserDelete.BuildTargetModel
- uid: MovieDiscovery.Server.Migrations.SetNullOnUserDelete.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MovieDiscovery.Server.Migrations.SetNullOnUserDelete.html#MovieDiscovery_Server_Migrations_SetNullOnUserDelete_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MovieDiscovery.Server.Migrations.SetNullOnUserDelete.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MovieDiscovery.Server.Migrations.SetNullOnUserDelete.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: SetNullOnUserDelete.Down(MigrationBuilder)
- uid: MovieDiscovery.Server.Migrations.SetNullOnUserDelete.Down*
  name: Down
  href: api/MovieDiscovery.Server.Migrations.SetNullOnUserDelete.html#MovieDiscovery_Server_Migrations_SetNullOnUserDelete_Down_
  commentId: Overload:MovieDiscovery.Server.Migrations.SetNullOnUserDelete.Down
  isSpec: "True"
  fullName: MovieDiscovery.Server.Migrations.SetNullOnUserDelete.Down
  nameWithType: SetNullOnUserDelete.Down
- uid: MovieDiscovery.Server.Migrations.SetNullOnUserDelete.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MovieDiscovery.Server.Migrations.SetNullOnUserDelete.html#MovieDiscovery_Server_Migrations_SetNullOnUserDelete_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MovieDiscovery.Server.Migrations.SetNullOnUserDelete.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MovieDiscovery.Server.Migrations.SetNullOnUserDelete.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: SetNullOnUserDelete.Up(MigrationBuilder)
- uid: MovieDiscovery.Server.Migrations.SetNullOnUserDelete.Up*
  name: Up
  href: api/MovieDiscovery.Server.Migrations.SetNullOnUserDelete.html#MovieDiscovery_Server_Migrations_SetNullOnUserDelete_Up_
  commentId: Overload:MovieDiscovery.Server.Migrations.SetNullOnUserDelete.Up
  isSpec: "True"
  fullName: MovieDiscovery.Server.Migrations.SetNullOnUserDelete.Up
  nameWithType: SetNullOnUserDelete.Up
- uid: MovieDiscovery.Server.Migrations.UpdateMovieDescription
  name: UpdateMovieDescription
  href: api/MovieDiscovery.Server.Migrations.UpdateMovieDescription.html
  commentId: T:MovieDiscovery.Server.Migrations.UpdateMovieDescription
  fullName: MovieDiscovery.Server.Migrations.UpdateMovieDescription
  nameWithType: UpdateMovieDescription
- uid: MovieDiscovery.Server.Migrations.UpdateMovieDescription.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MovieDiscovery.Server.Migrations.UpdateMovieDescription.html#MovieDiscovery_Server_Migrations_UpdateMovieDescription_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MovieDiscovery.Server.Migrations.UpdateMovieDescription.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MovieDiscovery.Server.Migrations.UpdateMovieDescription.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: UpdateMovieDescription.BuildTargetModel(ModelBuilder)
- uid: MovieDiscovery.Server.Migrations.UpdateMovieDescription.BuildTargetModel*
  name: BuildTargetModel
  href: api/MovieDiscovery.Server.Migrations.UpdateMovieDescription.html#MovieDiscovery_Server_Migrations_UpdateMovieDescription_BuildTargetModel_
  commentId: Overload:MovieDiscovery.Server.Migrations.UpdateMovieDescription.BuildTargetModel
  isSpec: "True"
  fullName: MovieDiscovery.Server.Migrations.UpdateMovieDescription.BuildTargetModel
  nameWithType: UpdateMovieDescription.BuildTargetModel
- uid: MovieDiscovery.Server.Migrations.UpdateMovieDescription.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MovieDiscovery.Server.Migrations.UpdateMovieDescription.html#MovieDiscovery_Server_Migrations_UpdateMovieDescription_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MovieDiscovery.Server.Migrations.UpdateMovieDescription.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MovieDiscovery.Server.Migrations.UpdateMovieDescription.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: UpdateMovieDescription.Down(MigrationBuilder)
- uid: MovieDiscovery.Server.Migrations.UpdateMovieDescription.Down*
  name: Down
  href: api/MovieDiscovery.Server.Migrations.UpdateMovieDescription.html#MovieDiscovery_Server_Migrations_UpdateMovieDescription_Down_
  commentId: Overload:MovieDiscovery.Server.Migrations.UpdateMovieDescription.Down
  isSpec: "True"
  fullName: MovieDiscovery.Server.Migrations.UpdateMovieDescription.Down
  nameWithType: UpdateMovieDescription.Down
- uid: MovieDiscovery.Server.Migrations.UpdateMovieDescription.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MovieDiscovery.Server.Migrations.UpdateMovieDescription.html#MovieDiscovery_Server_Migrations_UpdateMovieDescription_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MovieDiscovery.Server.Migrations.UpdateMovieDescription.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MovieDiscovery.Server.Migrations.UpdateMovieDescription.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: UpdateMovieDescription.Up(MigrationBuilder)
- uid: MovieDiscovery.Server.Migrations.UpdateMovieDescription.Up*
  name: Up
  href: api/MovieDiscovery.Server.Migrations.UpdateMovieDescription.html#MovieDiscovery_Server_Migrations_UpdateMovieDescription_Up_
  commentId: Overload:MovieDiscovery.Server.Migrations.UpdateMovieDescription.Up
  isSpec: "True"
  fullName: MovieDiscovery.Server.Migrations.UpdateMovieDescription.Up
  nameWithType: UpdateMovieDescription.Up
- uid: MovieDiscovery.Server.Models
  name: MovieDiscovery.Server.Models
  href: api/MovieDiscovery.Server.Models.html
  commentId: N:MovieDiscovery.Server.Models
  fullName: MovieDiscovery.Server.Models
  nameWithType: MovieDiscovery.Server.Models
- uid: MovieDiscovery.Server.Models.Genre
  name: Genre
  href: api/MovieDiscovery.Server.Models.Genre.html
  commentId: T:MovieDiscovery.Server.Models.Genre
  fullName: MovieDiscovery.Server.Models.Genre
  nameWithType: Genre
- uid: MovieDiscovery.Server.Models.Genre.Id
  name: Id
  href: api/MovieDiscovery.Server.Models.Genre.html#MovieDiscovery_Server_Models_Genre_Id
  commentId: P:MovieDiscovery.Server.Models.Genre.Id
  fullName: MovieDiscovery.Server.Models.Genre.Id
  nameWithType: Genre.Id
- uid: MovieDiscovery.Server.Models.Genre.Id*
  name: Id
  href: api/MovieDiscovery.Server.Models.Genre.html#MovieDiscovery_Server_Models_Genre_Id_
  commentId: Overload:MovieDiscovery.Server.Models.Genre.Id
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.Genre.Id
  nameWithType: Genre.Id
- uid: MovieDiscovery.Server.Models.Genre.MoviesGenres
  name: MoviesGenres
  href: api/MovieDiscovery.Server.Models.Genre.html#MovieDiscovery_Server_Models_Genre_MoviesGenres
  commentId: P:MovieDiscovery.Server.Models.Genre.MoviesGenres
  fullName: MovieDiscovery.Server.Models.Genre.MoviesGenres
  nameWithType: Genre.MoviesGenres
- uid: MovieDiscovery.Server.Models.Genre.MoviesGenres*
  name: MoviesGenres
  href: api/MovieDiscovery.Server.Models.Genre.html#MovieDiscovery_Server_Models_Genre_MoviesGenres_
  commentId: Overload:MovieDiscovery.Server.Models.Genre.MoviesGenres
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.Genre.MoviesGenres
  nameWithType: Genre.MoviesGenres
- uid: MovieDiscovery.Server.Models.Genre.Name
  name: Name
  href: api/MovieDiscovery.Server.Models.Genre.html#MovieDiscovery_Server_Models_Genre_Name
  commentId: P:MovieDiscovery.Server.Models.Genre.Name
  fullName: MovieDiscovery.Server.Models.Genre.Name
  nameWithType: Genre.Name
- uid: MovieDiscovery.Server.Models.Genre.Name*
  name: Name
  href: api/MovieDiscovery.Server.Models.Genre.html#MovieDiscovery_Server_Models_Genre_Name_
  commentId: Overload:MovieDiscovery.Server.Models.Genre.Name
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.Genre.Name
  nameWithType: Genre.Name
- uid: MovieDiscovery.Server.Models.Movie
  name: Movie
  href: api/MovieDiscovery.Server.Models.Movie.html
  commentId: T:MovieDiscovery.Server.Models.Movie
  fullName: MovieDiscovery.Server.Models.Movie
  nameWithType: Movie
- uid: MovieDiscovery.Server.Models.Movie.Description
  name: Description
  href: api/MovieDiscovery.Server.Models.Movie.html#MovieDiscovery_Server_Models_Movie_Description
  commentId: P:MovieDiscovery.Server.Models.Movie.Description
  fullName: MovieDiscovery.Server.Models.Movie.Description
  nameWithType: Movie.Description
- uid: MovieDiscovery.Server.Models.Movie.Description*
  name: Description
  href: api/MovieDiscovery.Server.Models.Movie.html#MovieDiscovery_Server_Models_Movie_Description_
  commentId: Overload:MovieDiscovery.Server.Models.Movie.Description
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.Movie.Description
  nameWithType: Movie.Description
- uid: MovieDiscovery.Server.Models.Movie.Id
  name: Id
  href: api/MovieDiscovery.Server.Models.Movie.html#MovieDiscovery_Server_Models_Movie_Id
  commentId: P:MovieDiscovery.Server.Models.Movie.Id
  fullName: MovieDiscovery.Server.Models.Movie.Id
  nameWithType: Movie.Id
- uid: MovieDiscovery.Server.Models.Movie.Id*
  name: Id
  href: api/MovieDiscovery.Server.Models.Movie.html#MovieDiscovery_Server_Models_Movie_Id_
  commentId: Overload:MovieDiscovery.Server.Models.Movie.Id
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.Movie.Id
  nameWithType: Movie.Id
- uid: MovieDiscovery.Server.Models.Movie.MoviesGenres
  name: MoviesGenres
  href: api/MovieDiscovery.Server.Models.Movie.html#MovieDiscovery_Server_Models_Movie_MoviesGenres
  commentId: P:MovieDiscovery.Server.Models.Movie.MoviesGenres
  fullName: MovieDiscovery.Server.Models.Movie.MoviesGenres
  nameWithType: Movie.MoviesGenres
- uid: MovieDiscovery.Server.Models.Movie.MoviesGenres*
  name: MoviesGenres
  href: api/MovieDiscovery.Server.Models.Movie.html#MovieDiscovery_Server_Models_Movie_MoviesGenres_
  commentId: Overload:MovieDiscovery.Server.Models.Movie.MoviesGenres
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.Movie.MoviesGenres
  nameWithType: Movie.MoviesGenres
- uid: MovieDiscovery.Server.Models.Movie.Rating
  name: Rating
  href: api/MovieDiscovery.Server.Models.Movie.html#MovieDiscovery_Server_Models_Movie_Rating
  commentId: P:MovieDiscovery.Server.Models.Movie.Rating
  fullName: MovieDiscovery.Server.Models.Movie.Rating
  nameWithType: Movie.Rating
- uid: MovieDiscovery.Server.Models.Movie.Rating*
  name: Rating
  href: api/MovieDiscovery.Server.Models.Movie.html#MovieDiscovery_Server_Models_Movie_Rating_
  commentId: Overload:MovieDiscovery.Server.Models.Movie.Rating
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.Movie.Rating
  nameWithType: Movie.Rating
- uid: MovieDiscovery.Server.Models.Movie.Title
  name: Title
  href: api/MovieDiscovery.Server.Models.Movie.html#MovieDiscovery_Server_Models_Movie_Title
  commentId: P:MovieDiscovery.Server.Models.Movie.Title
  fullName: MovieDiscovery.Server.Models.Movie.Title
  nameWithType: Movie.Title
- uid: MovieDiscovery.Server.Models.Movie.Title*
  name: Title
  href: api/MovieDiscovery.Server.Models.Movie.html#MovieDiscovery_Server_Models_Movie_Title_
  commentId: Overload:MovieDiscovery.Server.Models.Movie.Title
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.Movie.Title
  nameWithType: Movie.Title
- uid: MovieDiscovery.Server.Models.Movie.Year
  name: Year
  href: api/MovieDiscovery.Server.Models.Movie.html#MovieDiscovery_Server_Models_Movie_Year
  commentId: P:MovieDiscovery.Server.Models.Movie.Year
  fullName: MovieDiscovery.Server.Models.Movie.Year
  nameWithType: Movie.Year
- uid: MovieDiscovery.Server.Models.Movie.Year*
  name: Year
  href: api/MovieDiscovery.Server.Models.Movie.html#MovieDiscovery_Server_Models_Movie_Year_
  commentId: Overload:MovieDiscovery.Server.Models.Movie.Year
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.Movie.Year
  nameWithType: Movie.Year
- uid: MovieDiscovery.Server.Models.Movie_Genre
  name: Movie_Genre
  href: api/MovieDiscovery.Server.Models.Movie_Genre.html
  commentId: T:MovieDiscovery.Server.Models.Movie_Genre
  fullName: MovieDiscovery.Server.Models.Movie_Genre
  nameWithType: Movie_Genre
- uid: MovieDiscovery.Server.Models.Movie_Genre.Genre
  name: Genre
  href: api/MovieDiscovery.Server.Models.Movie_Genre.html#MovieDiscovery_Server_Models_Movie_Genre_Genre
  commentId: P:MovieDiscovery.Server.Models.Movie_Genre.Genre
  fullName: MovieDiscovery.Server.Models.Movie_Genre.Genre
  nameWithType: Movie_Genre.Genre
- uid: MovieDiscovery.Server.Models.Movie_Genre.Genre*
  name: Genre
  href: api/MovieDiscovery.Server.Models.Movie_Genre.html#MovieDiscovery_Server_Models_Movie_Genre_Genre_
  commentId: Overload:MovieDiscovery.Server.Models.Movie_Genre.Genre
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.Movie_Genre.Genre
  nameWithType: Movie_Genre.Genre
- uid: MovieDiscovery.Server.Models.Movie_Genre.GenreId
  name: GenreId
  href: api/MovieDiscovery.Server.Models.Movie_Genre.html#MovieDiscovery_Server_Models_Movie_Genre_GenreId
  commentId: P:MovieDiscovery.Server.Models.Movie_Genre.GenreId
  fullName: MovieDiscovery.Server.Models.Movie_Genre.GenreId
  nameWithType: Movie_Genre.GenreId
- uid: MovieDiscovery.Server.Models.Movie_Genre.GenreId*
  name: GenreId
  href: api/MovieDiscovery.Server.Models.Movie_Genre.html#MovieDiscovery_Server_Models_Movie_Genre_GenreId_
  commentId: Overload:MovieDiscovery.Server.Models.Movie_Genre.GenreId
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.Movie_Genre.GenreId
  nameWithType: Movie_Genre.GenreId
- uid: MovieDiscovery.Server.Models.Movie_Genre.Id
  name: Id
  href: api/MovieDiscovery.Server.Models.Movie_Genre.html#MovieDiscovery_Server_Models_Movie_Genre_Id
  commentId: P:MovieDiscovery.Server.Models.Movie_Genre.Id
  fullName: MovieDiscovery.Server.Models.Movie_Genre.Id
  nameWithType: Movie_Genre.Id
- uid: MovieDiscovery.Server.Models.Movie_Genre.Id*
  name: Id
  href: api/MovieDiscovery.Server.Models.Movie_Genre.html#MovieDiscovery_Server_Models_Movie_Genre_Id_
  commentId: Overload:MovieDiscovery.Server.Models.Movie_Genre.Id
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.Movie_Genre.Id
  nameWithType: Movie_Genre.Id
- uid: MovieDiscovery.Server.Models.Movie_Genre.Movie
  name: Movie
  href: api/MovieDiscovery.Server.Models.Movie_Genre.html#MovieDiscovery_Server_Models_Movie_Genre_Movie
  commentId: P:MovieDiscovery.Server.Models.Movie_Genre.Movie
  fullName: MovieDiscovery.Server.Models.Movie_Genre.Movie
  nameWithType: Movie_Genre.Movie
- uid: MovieDiscovery.Server.Models.Movie_Genre.Movie*
  name: Movie
  href: api/MovieDiscovery.Server.Models.Movie_Genre.html#MovieDiscovery_Server_Models_Movie_Genre_Movie_
  commentId: Overload:MovieDiscovery.Server.Models.Movie_Genre.Movie
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.Movie_Genre.Movie
  nameWithType: Movie_Genre.Movie
- uid: MovieDiscovery.Server.Models.Movie_Genre.MovieId
  name: MovieId
  href: api/MovieDiscovery.Server.Models.Movie_Genre.html#MovieDiscovery_Server_Models_Movie_Genre_MovieId
  commentId: P:MovieDiscovery.Server.Models.Movie_Genre.MovieId
  fullName: MovieDiscovery.Server.Models.Movie_Genre.MovieId
  nameWithType: Movie_Genre.MovieId
- uid: MovieDiscovery.Server.Models.Movie_Genre.MovieId*
  name: MovieId
  href: api/MovieDiscovery.Server.Models.Movie_Genre.html#MovieDiscovery_Server_Models_Movie_Genre_MovieId_
  commentId: Overload:MovieDiscovery.Server.Models.Movie_Genre.MovieId
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.Movie_Genre.MovieId
  nameWithType: Movie_Genre.MovieId
- uid: MovieDiscovery.Server.Models.Movie_Genre.User
  name: User
  href: api/MovieDiscovery.Server.Models.Movie_Genre.html#MovieDiscovery_Server_Models_Movie_Genre_User
  commentId: P:MovieDiscovery.Server.Models.Movie_Genre.User
  fullName: MovieDiscovery.Server.Models.Movie_Genre.User
  nameWithType: Movie_Genre.User
- uid: MovieDiscovery.Server.Models.Movie_Genre.User*
  name: User
  href: api/MovieDiscovery.Server.Models.Movie_Genre.html#MovieDiscovery_Server_Models_Movie_Genre_User_
  commentId: Overload:MovieDiscovery.Server.Models.Movie_Genre.User
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.Movie_Genre.User
  nameWithType: Movie_Genre.User
- uid: MovieDiscovery.Server.Models.Movie_Genre.UserId
  name: UserId
  href: api/MovieDiscovery.Server.Models.Movie_Genre.html#MovieDiscovery_Server_Models_Movie_Genre_UserId
  commentId: P:MovieDiscovery.Server.Models.Movie_Genre.UserId
  fullName: MovieDiscovery.Server.Models.Movie_Genre.UserId
  nameWithType: Movie_Genre.UserId
- uid: MovieDiscovery.Server.Models.Movie_Genre.UserId*
  name: UserId
  href: api/MovieDiscovery.Server.Models.Movie_Genre.html#MovieDiscovery_Server_Models_Movie_Genre_UserId_
  commentId: Overload:MovieDiscovery.Server.Models.Movie_Genre.UserId
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.Movie_Genre.UserId
  nameWithType: Movie_Genre.UserId
- uid: MovieDiscovery.Server.Models.User
  name: User
  href: api/MovieDiscovery.Server.Models.User.html
  commentId: T:MovieDiscovery.Server.Models.User
  fullName: MovieDiscovery.Server.Models.User
  nameWithType: User
- uid: MovieDiscovery.Server.Models.User.Email
  name: Email
  href: api/MovieDiscovery.Server.Models.User.html#MovieDiscovery_Server_Models_User_Email
  commentId: P:MovieDiscovery.Server.Models.User.Email
  fullName: MovieDiscovery.Server.Models.User.Email
  nameWithType: User.Email
- uid: MovieDiscovery.Server.Models.User.Email*
  name: Email
  href: api/MovieDiscovery.Server.Models.User.html#MovieDiscovery_Server_Models_User_Email_
  commentId: Overload:MovieDiscovery.Server.Models.User.Email
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.User.Email
  nameWithType: User.Email
- uid: MovieDiscovery.Server.Models.User.Id
  name: Id
  href: api/MovieDiscovery.Server.Models.User.html#MovieDiscovery_Server_Models_User_Id
  commentId: P:MovieDiscovery.Server.Models.User.Id
  fullName: MovieDiscovery.Server.Models.User.Id
  nameWithType: User.Id
- uid: MovieDiscovery.Server.Models.User.Id*
  name: Id
  href: api/MovieDiscovery.Server.Models.User.html#MovieDiscovery_Server_Models_User_Id_
  commentId: Overload:MovieDiscovery.Server.Models.User.Id
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.User.Id
  nameWithType: User.Id
- uid: MovieDiscovery.Server.Models.User.MoviesGenres
  name: MoviesGenres
  href: api/MovieDiscovery.Server.Models.User.html#MovieDiscovery_Server_Models_User_MoviesGenres
  commentId: P:MovieDiscovery.Server.Models.User.MoviesGenres
  fullName: MovieDiscovery.Server.Models.User.MoviesGenres
  nameWithType: User.MoviesGenres
- uid: MovieDiscovery.Server.Models.User.MoviesGenres*
  name: MoviesGenres
  href: api/MovieDiscovery.Server.Models.User.html#MovieDiscovery_Server_Models_User_MoviesGenres_
  commentId: Overload:MovieDiscovery.Server.Models.User.MoviesGenres
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.User.MoviesGenres
  nameWithType: User.MoviesGenres
- uid: MovieDiscovery.Server.Models.User.PasswordHash
  name: PasswordHash
  href: api/MovieDiscovery.Server.Models.User.html#MovieDiscovery_Server_Models_User_PasswordHash
  commentId: P:MovieDiscovery.Server.Models.User.PasswordHash
  fullName: MovieDiscovery.Server.Models.User.PasswordHash
  nameWithType: User.PasswordHash
- uid: MovieDiscovery.Server.Models.User.PasswordHash*
  name: PasswordHash
  href: api/MovieDiscovery.Server.Models.User.html#MovieDiscovery_Server_Models_User_PasswordHash_
  commentId: Overload:MovieDiscovery.Server.Models.User.PasswordHash
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.User.PasswordHash
  nameWithType: User.PasswordHash
- uid: MovieDiscovery.Server.Models.User.Username
  name: Username
  href: api/MovieDiscovery.Server.Models.User.html#MovieDiscovery_Server_Models_User_Username
  commentId: P:MovieDiscovery.Server.Models.User.Username
  fullName: MovieDiscovery.Server.Models.User.Username
  nameWithType: User.Username
- uid: MovieDiscovery.Server.Models.User.Username*
  name: Username
  href: api/MovieDiscovery.Server.Models.User.html#MovieDiscovery_Server_Models_User_Username_
  commentId: Overload:MovieDiscovery.Server.Models.User.Username
  isSpec: "True"
  fullName: MovieDiscovery.Server.Models.User.Username
  nameWithType: User.Username
- uid: MovieDiscovery.Server.Services
  name: MovieDiscovery.Server.Services
  href: api/MovieDiscovery.Server.Services.html
  commentId: N:MovieDiscovery.Server.Services
  fullName: MovieDiscovery.Server.Services
  nameWithType: MovieDiscovery.Server.Services
- uid: MovieDiscovery.Server.Services.GenreService
  name: GenreService
  href: api/MovieDiscovery.Server.Services.GenreService.html
  commentId: T:MovieDiscovery.Server.Services.GenreService
  fullName: MovieDiscovery.Server.Services.GenreService
  nameWithType: GenreService
- uid: MovieDiscovery.Server.Services.GenreService.#ctor(MovieDiscovery.Server.Context.MovieDBContext)
  name: GenreService(MovieDBContext)
  href: api/MovieDiscovery.Server.Services.GenreService.html#MovieDiscovery_Server_Services_GenreService__ctor_MovieDiscovery_Server_Context_MovieDBContext_
  commentId: M:MovieDiscovery.Server.Services.GenreService.#ctor(MovieDiscovery.Server.Context.MovieDBContext)
  name.vb: New(MovieDBContext)
  fullName: MovieDiscovery.Server.Services.GenreService.GenreService(MovieDiscovery.Server.Context.MovieDBContext)
  fullName.vb: MovieDiscovery.Server.Services.GenreService.New(MovieDiscovery.Server.Context.MovieDBContext)
  nameWithType: GenreService.GenreService(MovieDBContext)
  nameWithType.vb: GenreService.New(MovieDBContext)
- uid: MovieDiscovery.Server.Services.GenreService.#ctor*
  name: GenreService
  href: api/MovieDiscovery.Server.Services.GenreService.html#MovieDiscovery_Server_Services_GenreService__ctor_
  commentId: Overload:MovieDiscovery.Server.Services.GenreService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MovieDiscovery.Server.Services.GenreService.GenreService
  fullName.vb: MovieDiscovery.Server.Services.GenreService.New
  nameWithType: GenreService.GenreService
  nameWithType.vb: GenreService.New
- uid: MovieDiscovery.Server.Services.GenreService.GetAllAsync
  name: GetAllAsync()
  href: api/MovieDiscovery.Server.Services.GenreService.html#MovieDiscovery_Server_Services_GenreService_GetAllAsync
  commentId: M:MovieDiscovery.Server.Services.GenreService.GetAllAsync
  fullName: MovieDiscovery.Server.Services.GenreService.GetAllAsync()
  nameWithType: GenreService.GetAllAsync()
- uid: MovieDiscovery.Server.Services.GenreService.GetAllAsync*
  name: GetAllAsync
  href: api/MovieDiscovery.Server.Services.GenreService.html#MovieDiscovery_Server_Services_GenreService_GetAllAsync_
  commentId: Overload:MovieDiscovery.Server.Services.GenreService.GetAllAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Services.GenreService.GetAllAsync
  nameWithType: GenreService.GetAllAsync
- uid: MovieDiscovery.Server.Services.MovieService
  name: MovieService
  href: api/MovieDiscovery.Server.Services.MovieService.html
  commentId: T:MovieDiscovery.Server.Services.MovieService
  fullName: MovieDiscovery.Server.Services.MovieService
  nameWithType: MovieService
- uid: MovieDiscovery.Server.Services.MovieService.#ctor(MovieDiscovery.Server.Context.MovieDBContext)
  name: MovieService(MovieDBContext)
  href: api/MovieDiscovery.Server.Services.MovieService.html#MovieDiscovery_Server_Services_MovieService__ctor_MovieDiscovery_Server_Context_MovieDBContext_
  commentId: M:MovieDiscovery.Server.Services.MovieService.#ctor(MovieDiscovery.Server.Context.MovieDBContext)
  name.vb: New(MovieDBContext)
  fullName: MovieDiscovery.Server.Services.MovieService.MovieService(MovieDiscovery.Server.Context.MovieDBContext)
  fullName.vb: MovieDiscovery.Server.Services.MovieService.New(MovieDiscovery.Server.Context.MovieDBContext)
  nameWithType: MovieService.MovieService(MovieDBContext)
  nameWithType.vb: MovieService.New(MovieDBContext)
- uid: MovieDiscovery.Server.Services.MovieService.#ctor*
  name: MovieService
  href: api/MovieDiscovery.Server.Services.MovieService.html#MovieDiscovery_Server_Services_MovieService__ctor_
  commentId: Overload:MovieDiscovery.Server.Services.MovieService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MovieDiscovery.Server.Services.MovieService.MovieService
  fullName.vb: MovieDiscovery.Server.Services.MovieService.New
  nameWithType: MovieService.MovieService
  nameWithType.vb: MovieService.New
- uid: MovieDiscovery.Server.Services.MovieService.AddMovieAsync(MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest,System.Int32)
  name: AddMovieAsync(CreateMovieRequest, int)
  href: api/MovieDiscovery.Server.Services.MovieService.html#MovieDiscovery_Server_Services_MovieService_AddMovieAsync_MovieDiscovery_Server_Contracts_Movie_CreateMovieRequest_System_Int32_
  commentId: M:MovieDiscovery.Server.Services.MovieService.AddMovieAsync(MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest,System.Int32)
  name.vb: AddMovieAsync(CreateMovieRequest, Integer)
  fullName: MovieDiscovery.Server.Services.MovieService.AddMovieAsync(MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest, int)
  fullName.vb: MovieDiscovery.Server.Services.MovieService.AddMovieAsync(MovieDiscovery.Server.Contracts.Movie.CreateMovieRequest, Integer)
  nameWithType: MovieService.AddMovieAsync(CreateMovieRequest, int)
  nameWithType.vb: MovieService.AddMovieAsync(CreateMovieRequest, Integer)
- uid: MovieDiscovery.Server.Services.MovieService.AddMovieAsync*
  name: AddMovieAsync
  href: api/MovieDiscovery.Server.Services.MovieService.html#MovieDiscovery_Server_Services_MovieService_AddMovieAsync_
  commentId: Overload:MovieDiscovery.Server.Services.MovieService.AddMovieAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Services.MovieService.AddMovieAsync
  nameWithType: MovieService.AddMovieAsync
- uid: MovieDiscovery.Server.Services.MovieService.GetAllAsync
  name: GetAllAsync()
  href: api/MovieDiscovery.Server.Services.MovieService.html#MovieDiscovery_Server_Services_MovieService_GetAllAsync
  commentId: M:MovieDiscovery.Server.Services.MovieService.GetAllAsync
  fullName: MovieDiscovery.Server.Services.MovieService.GetAllAsync()
  nameWithType: MovieService.GetAllAsync()
- uid: MovieDiscovery.Server.Services.MovieService.GetAllAsync*
  name: GetAllAsync
  href: api/MovieDiscovery.Server.Services.MovieService.html#MovieDiscovery_Server_Services_MovieService_GetAllAsync_
  commentId: Overload:MovieDiscovery.Server.Services.MovieService.GetAllAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Services.MovieService.GetAllAsync
  nameWithType: MovieService.GetAllAsync
- uid: MovieDiscovery.Server.Services.MovieService.GetByTitleAsync(System.String)
  name: GetByTitleAsync(string)
  href: api/MovieDiscovery.Server.Services.MovieService.html#MovieDiscovery_Server_Services_MovieService_GetByTitleAsync_System_String_
  commentId: M:MovieDiscovery.Server.Services.MovieService.GetByTitleAsync(System.String)
  name.vb: GetByTitleAsync(String)
  fullName: MovieDiscovery.Server.Services.MovieService.GetByTitleAsync(string)
  fullName.vb: MovieDiscovery.Server.Services.MovieService.GetByTitleAsync(String)
  nameWithType: MovieService.GetByTitleAsync(string)
  nameWithType.vb: MovieService.GetByTitleAsync(String)
- uid: MovieDiscovery.Server.Services.MovieService.GetByTitleAsync*
  name: GetByTitleAsync
  href: api/MovieDiscovery.Server.Services.MovieService.html#MovieDiscovery_Server_Services_MovieService_GetByTitleAsync_
  commentId: Overload:MovieDiscovery.Server.Services.MovieService.GetByTitleAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Services.MovieService.GetByTitleAsync
  nameWithType: MovieService.GetByTitleAsync
- uid: MovieDiscovery.Server.Services.MovieService.GetRandomMovieAsync
  name: GetRandomMovieAsync()
  href: api/MovieDiscovery.Server.Services.MovieService.html#MovieDiscovery_Server_Services_MovieService_GetRandomMovieAsync
  commentId: M:MovieDiscovery.Server.Services.MovieService.GetRandomMovieAsync
  fullName: MovieDiscovery.Server.Services.MovieService.GetRandomMovieAsync()
  nameWithType: MovieService.GetRandomMovieAsync()
- uid: MovieDiscovery.Server.Services.MovieService.GetRandomMovieAsync*
  name: GetRandomMovieAsync
  href: api/MovieDiscovery.Server.Services.MovieService.html#MovieDiscovery_Server_Services_MovieService_GetRandomMovieAsync_
  commentId: Overload:MovieDiscovery.Server.Services.MovieService.GetRandomMovieAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Services.MovieService.GetRandomMovieAsync
  nameWithType: MovieService.GetRandomMovieAsync
- uid: MovieDiscovery.Server.Services.UserContextService
  name: UserContextService
  href: api/MovieDiscovery.Server.Services.UserContextService.html
  commentId: T:MovieDiscovery.Server.Services.UserContextService
  fullName: MovieDiscovery.Server.Services.UserContextService
  nameWithType: UserContextService
- uid: MovieDiscovery.Server.Services.UserContextService.GetUserIdFromHttpContext(Microsoft.AspNetCore.Http.HttpContext)
  name: GetUserIdFromHttpContext(HttpContext)
  href: api/MovieDiscovery.Server.Services.UserContextService.html#MovieDiscovery_Server_Services_UserContextService_GetUserIdFromHttpContext_Microsoft_AspNetCore_Http_HttpContext_
  commentId: M:MovieDiscovery.Server.Services.UserContextService.GetUserIdFromHttpContext(Microsoft.AspNetCore.Http.HttpContext)
  fullName: MovieDiscovery.Server.Services.UserContextService.GetUserIdFromHttpContext(Microsoft.AspNetCore.Http.HttpContext)
  nameWithType: UserContextService.GetUserIdFromHttpContext(HttpContext)
- uid: MovieDiscovery.Server.Services.UserContextService.GetUserIdFromHttpContext*
  name: GetUserIdFromHttpContext
  href: api/MovieDiscovery.Server.Services.UserContextService.html#MovieDiscovery_Server_Services_UserContextService_GetUserIdFromHttpContext_
  commentId: Overload:MovieDiscovery.Server.Services.UserContextService.GetUserIdFromHttpContext
  isSpec: "True"
  fullName: MovieDiscovery.Server.Services.UserContextService.GetUserIdFromHttpContext
  nameWithType: UserContextService.GetUserIdFromHttpContext
- uid: MovieDiscovery.Server.Services.UserService
  name: UserService
  href: api/MovieDiscovery.Server.Services.UserService.html
  commentId: T:MovieDiscovery.Server.Services.UserService
  fullName: MovieDiscovery.Server.Services.UserService
  nameWithType: UserService
- uid: MovieDiscovery.Server.Services.UserService.#ctor(MovieDiscovery.Server.Context.MovieDBContext)
  name: UserService(MovieDBContext)
  href: api/MovieDiscovery.Server.Services.UserService.html#MovieDiscovery_Server_Services_UserService__ctor_MovieDiscovery_Server_Context_MovieDBContext_
  commentId: M:MovieDiscovery.Server.Services.UserService.#ctor(MovieDiscovery.Server.Context.MovieDBContext)
  name.vb: New(MovieDBContext)
  fullName: MovieDiscovery.Server.Services.UserService.UserService(MovieDiscovery.Server.Context.MovieDBContext)
  fullName.vb: MovieDiscovery.Server.Services.UserService.New(MovieDiscovery.Server.Context.MovieDBContext)
  nameWithType: UserService.UserService(MovieDBContext)
  nameWithType.vb: UserService.New(MovieDBContext)
- uid: MovieDiscovery.Server.Services.UserService.#ctor*
  name: UserService
  href: api/MovieDiscovery.Server.Services.UserService.html#MovieDiscovery_Server_Services_UserService__ctor_
  commentId: Overload:MovieDiscovery.Server.Services.UserService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MovieDiscovery.Server.Services.UserService.UserService
  fullName.vb: MovieDiscovery.Server.Services.UserService.New
  nameWithType: UserService.UserService
  nameWithType.vb: UserService.New
- uid: MovieDiscovery.Server.Services.UserService.AddUser(MovieDiscovery.Server.Contracts.User.CreateUserRequest)
  name: AddUser(CreateUserRequest)
  href: api/MovieDiscovery.Server.Services.UserService.html#MovieDiscovery_Server_Services_UserService_AddUser_MovieDiscovery_Server_Contracts_User_CreateUserRequest_
  commentId: M:MovieDiscovery.Server.Services.UserService.AddUser(MovieDiscovery.Server.Contracts.User.CreateUserRequest)
  fullName: MovieDiscovery.Server.Services.UserService.AddUser(MovieDiscovery.Server.Contracts.User.CreateUserRequest)
  nameWithType: UserService.AddUser(CreateUserRequest)
- uid: MovieDiscovery.Server.Services.UserService.AddUser*
  name: AddUser
  href: api/MovieDiscovery.Server.Services.UserService.html#MovieDiscovery_Server_Services_UserService_AddUser_
  commentId: Overload:MovieDiscovery.Server.Services.UserService.AddUser
  isSpec: "True"
  fullName: MovieDiscovery.Server.Services.UserService.AddUser
  nameWithType: UserService.AddUser
- uid: MovieDiscovery.Server.Services.UserService.DeleteUserAsync(System.Int32)
  name: DeleteUserAsync(int)
  href: api/MovieDiscovery.Server.Services.UserService.html#MovieDiscovery_Server_Services_UserService_DeleteUserAsync_System_Int32_
  commentId: M:MovieDiscovery.Server.Services.UserService.DeleteUserAsync(System.Int32)
  name.vb: DeleteUserAsync(Integer)
  fullName: MovieDiscovery.Server.Services.UserService.DeleteUserAsync(int)
  fullName.vb: MovieDiscovery.Server.Services.UserService.DeleteUserAsync(Integer)
  nameWithType: UserService.DeleteUserAsync(int)
  nameWithType.vb: UserService.DeleteUserAsync(Integer)
- uid: MovieDiscovery.Server.Services.UserService.DeleteUserAsync*
  name: DeleteUserAsync
  href: api/MovieDiscovery.Server.Services.UserService.html#MovieDiscovery_Server_Services_UserService_DeleteUserAsync_
  commentId: Overload:MovieDiscovery.Server.Services.UserService.DeleteUserAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Services.UserService.DeleteUserAsync
  nameWithType: UserService.DeleteUserAsync
- uid: MovieDiscovery.Server.Services.UserService.GetUserByEmailAndUsernameAsync(System.String,System.String)
  name: GetUserByEmailAndUsernameAsync(string?, string?)
  href: api/MovieDiscovery.Server.Services.UserService.html#MovieDiscovery_Server_Services_UserService_GetUserByEmailAndUsernameAsync_System_String_System_String_
  commentId: M:MovieDiscovery.Server.Services.UserService.GetUserByEmailAndUsernameAsync(System.String,System.String)
  name.vb: GetUserByEmailAndUsernameAsync(String, String)
  fullName: MovieDiscovery.Server.Services.UserService.GetUserByEmailAndUsernameAsync(string?, string?)
  fullName.vb: MovieDiscovery.Server.Services.UserService.GetUserByEmailAndUsernameAsync(String, String)
  nameWithType: UserService.GetUserByEmailAndUsernameAsync(string?, string?)
  nameWithType.vb: UserService.GetUserByEmailAndUsernameAsync(String, String)
- uid: MovieDiscovery.Server.Services.UserService.GetUserByEmailAndUsernameAsync*
  name: GetUserByEmailAndUsernameAsync
  href: api/MovieDiscovery.Server.Services.UserService.html#MovieDiscovery_Server_Services_UserService_GetUserByEmailAndUsernameAsync_
  commentId: Overload:MovieDiscovery.Server.Services.UserService.GetUserByEmailAndUsernameAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Services.UserService.GetUserByEmailAndUsernameAsync
  nameWithType: UserService.GetUserByEmailAndUsernameAsync
- uid: MovieDiscovery.Server.Services.UserService.GetUserByIdAsync(System.Int32)
  name: GetUserByIdAsync(int)
  href: api/MovieDiscovery.Server.Services.UserService.html#MovieDiscovery_Server_Services_UserService_GetUserByIdAsync_System_Int32_
  commentId: M:MovieDiscovery.Server.Services.UserService.GetUserByIdAsync(System.Int32)
  name.vb: GetUserByIdAsync(Integer)
  fullName: MovieDiscovery.Server.Services.UserService.GetUserByIdAsync(int)
  fullName.vb: MovieDiscovery.Server.Services.UserService.GetUserByIdAsync(Integer)
  nameWithType: UserService.GetUserByIdAsync(int)
  nameWithType.vb: UserService.GetUserByIdAsync(Integer)
- uid: MovieDiscovery.Server.Services.UserService.GetUserByIdAsync*
  name: GetUserByIdAsync
  href: api/MovieDiscovery.Server.Services.UserService.html#MovieDiscovery_Server_Services_UserService_GetUserByIdAsync_
  commentId: Overload:MovieDiscovery.Server.Services.UserService.GetUserByIdAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Services.UserService.GetUserByIdAsync
  nameWithType: UserService.GetUserByIdAsync
- uid: MovieDiscovery.Server.Services.UserService.UpdateUserAsync(MovieDiscovery.Server.Contracts.User.UpdateUserRequest,System.Int32)
  name: UpdateUserAsync(UpdateUserRequest, int)
  href: api/MovieDiscovery.Server.Services.UserService.html#MovieDiscovery_Server_Services_UserService_UpdateUserAsync_MovieDiscovery_Server_Contracts_User_UpdateUserRequest_System_Int32_
  commentId: M:MovieDiscovery.Server.Services.UserService.UpdateUserAsync(MovieDiscovery.Server.Contracts.User.UpdateUserRequest,System.Int32)
  name.vb: UpdateUserAsync(UpdateUserRequest, Integer)
  fullName: MovieDiscovery.Server.Services.UserService.UpdateUserAsync(MovieDiscovery.Server.Contracts.User.UpdateUserRequest, int)
  fullName.vb: MovieDiscovery.Server.Services.UserService.UpdateUserAsync(MovieDiscovery.Server.Contracts.User.UpdateUserRequest, Integer)
  nameWithType: UserService.UpdateUserAsync(UpdateUserRequest, int)
  nameWithType.vb: UserService.UpdateUserAsync(UpdateUserRequest, Integer)
- uid: MovieDiscovery.Server.Services.UserService.UpdateUserAsync*
  name: UpdateUserAsync
  href: api/MovieDiscovery.Server.Services.UserService.html#MovieDiscovery_Server_Services_UserService_UpdateUserAsync_
  commentId: Overload:MovieDiscovery.Server.Services.UserService.UpdateUserAsync
  isSpec: "True"
  fullName: MovieDiscovery.Server.Services.UserService.UpdateUserAsync
  nameWithType: UserService.UpdateUserAsync
